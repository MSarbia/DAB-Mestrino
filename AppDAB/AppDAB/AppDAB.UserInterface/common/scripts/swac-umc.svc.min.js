var UmcWebSSO = function (a, b) { var c = 600, d = 0, e = "", f = null, g = "sleep", h = function () { function i(a) { return null === a || void 0 === a || "string" != typeof a.session || "undefined" == typeof a.sessionrenewal ? (r("_init failed ... not a valid claim"), !1) : (f = a, e = f.session, c = "string" == typeof a.sessionrenewal ? parseInt(a.sessionrenewal) : a.sessionrenewal, !0) } function j(a) { return v("loginrequest", a) } function k() { r("Service: Logout received ... "); var a = new SWAC.Defer; return "waitLogin" === g ? a.reject(new SWAC.Reason("... _beginLogout->rejected because during authentication")) : v("logoutrequest", null, a), a.promise } function l() { r("Service: Renew received ... "), d = (new Date).getTime() / 1e3; var a = new SWAC.Defer; return "waitLogin" === g ? a.reject(new SWAC.Reason("... _beginRenew->rejected because during authentication")) : (v("renewrequest", null, a), a.promise.then(function (a) { }, function () { })), a.promise } function m(a) { return r("Service: GetKey received ... "), v("getkeyrequest", a) } function n() { r("Service: heartbeat received ... "); var a = (new Date).getTime() / 1e3, b = c - (a - d); b < 0 && l() } function o(a) { r("Service: ChangeLanguage received ... "); var b = new SWAC.Defer; return "waitLogin" === g ? b.reject(new SWAC.Reason("... _beginChangeLanguage->rejected because during authentication")) : v("changelanguagerequest", a, b), b.promise } function p(a) { r("Service: Authentication received ... "); var c = new SWAC.Defer; return "object" != typeof a || "string" != typeof a.service || 0 === a.service.length ? (c.reject(new SWAC.Reason("Login: Service mandatory parameter not found")), c.promise) : "waitLogin" === g ? (h.push({ def: c, params: a }), c.promise) : (v("loginrequest", a).then(function (a) { r("Service: Authentication solved by silentLogin ... "), c.fulfill(a) }, function (d) { var e = null; "waitLogin" !== g ? (g = "waitLogin", e = new SWAC.Defer, e.promise.then(function (a) { var b = null, d = a.claim; try { d = atob(a.claim) } catch (a) { } for (i(JSON.parse(d)), r("Service: Login made: " + a), g = "sleep", c.fulfill(a) ; h.length > 0;) b = h.pop(), q(b.params, b.def) }, function (a) { for (r("Service: Login failed:" + a.message), g = "sleep", c.reject(a) ; h.length > 0;) h.pop().def.reject(a) }), b(a, e)) : (r("_beginAuthentication park req:" + a), h.push({ def: c, params: a })) }), c.promise) } function r(a) { window.console && window.console.log(a) } function s(a) { var b = new SWAC.Defer, c = new XMLHttpRequest; c.onreadystatechange = function () { if (4 === c.readyState) if (200 === c.status) { var a = null; try { a = JSON.parse(c.responseText) } catch (a) { } a && "object" == typeof a ? "string" == typeof a.result ? "success" === a.result.toLowerCase() ? b.fulfill(a) : b.reject(new SWAC.Reason(a.result)) : b.fulfill(a) : b.fulfill({}) } else b.reject(new SWAC.Reason("request failed with status: " + c.status)) }; var d = a + "&json=json"; return c.open("GET", d, !0), c.withCredentials = !0, c.send(null), b.promise } function t(a) { var b = new SWAC.Defer, c = document.getElementsByTagName("head")[0], d = document.createElement("script"), e = "jsonp_callback_" + Math.round(1e5 * Math.random()); return window[e] = function (a) { delete window[e], "object" == typeof a ? "string" == typeof a.result ? "success" === a.result.toLowerCase() ? b.fulfill(a) : b.reject(new SWAC.Reason(a.result)) : b.fulfill(a) : b.fulfill({}) }, d.src = a + "&callback=" + e, d.onload = function () { c.removeChild(d) }, c.appendChild(d), b.promise } function u(a) { if (window.XMLHttpRequest) { var b = new XMLHttpRequest; if ("undefined" != typeof b.withCredentials) return s(a) } return t(a) } function v(b, c, d) { var f = "object" == typeof d ? d : new SWAC.Defer, g = { proceed: !1, errmsg: "unknown action", reqURL: "" }; switch (b) { case "loginrequest": "object" != typeof c || "string" != typeof c.service || 0 === c.service.length ? g.errmsg = "Login: Service mandatory parameter not found" : (g.proceed = !0, g.reqURL = a + "?action=loginrequest&service=" + c.service, "string" == typeof c.nonce && c.nonce.length > 0 && (g.reqURL += "&nonce=" + c.nonce), "string" == typeof c.keyid && c.keyid.length > 0 && (g.reqURL += "&keyid=" + c.keyid), "boolean" == typeof c.dontnotifyrenew && (g.reqURL += "&dontnotifyrenew=" + c.dontnotifyrenew)); break; case "logoutrequest": case "renewrequest": null === e || "string" != typeof e || 0 === e.length ? g.errmsg = "Session mandatory parameter not found for [" + b + "] ... init the service" : (g.proceed = !0, g.reqURL = a + "?action=" + b + "&session=" + e); break; case "changelanguagerequest": null === e || "string" != typeof e || 0 === e.length ? g.errmsg = "Session mandatory parameter not found [" + b + "]... init the service" : "object" != typeof c || "string" != typeof c.language || 0 === c.language.length ? g.errmsg = "ChangeLanguage: language mandatory parameter not found" : (g.proceed = !0, g.reqURL = a + "?action=changelanguagerequest&session=" + e + "&language=" + c.language); break; case "getkeyrequest": "object" != typeof c || "string" != typeof c.service || 0 === c.service.length ? g.errmsg = "Login: Service mandatory parameter not found" : (g.proceed = !0, g.reqURL = a + "?action=getkeyrequest&service=" + c.service, "object" == typeof c && ("string" == typeof c.nonce && c.nonce.length > 0 && (g.reqURL += "&nonce=" + c.nonce), "string" == typeof c.keyid && c.keyid.length > 0 && (g.reqURL += "&keyid=" + c.keyid))) } return g.proceed ? ("loginrequest" !== b && "getkeyrequest" !== b && (g.reqURL += "&service=http://localhost"), u(g.reqURL).then(function (a) { var b = "", d = 0, g = ""; if (void 0 !== a.sessionlist && ("logoutresponse" === a.action.toLowerCase() ? b = "logout&response=success&session=" + e : "changelanguageresponse" === a.action.toLowerCase() ? b = "changelanguage&response=success&language=" + c.language : "renewresponse" === a.action.toLowerCase() && (b = "renew&response=success&session=" + e), b.length > 0)) for (d = 0; d < a.sessionlist.length; d++) g = decodeURIComponent(a.sessionlist[d]), g += g.search("&") > -1 ? "&action=" : "?action=", b = b + "&rnd=" + Date.now(), g += b, function (a) { console.log("Session renewal postponed."), setTimeout(function () { u(a) }, 0) }(g); f.fulfill(a) }, function (a) { f.reject(a) })) : f.reject(new SWAC.Reason(g.errmsg)), f.promise } var h = [], q = function (a, b) { j(a).then(function (a) { b.fulfill(a) }, function (a) { b.reject(a) }) }; return { init: i, beginSilentLogin: j, beginLogout: k, beginRenew: l, beginChangeLanguage: o, beginGetKey: m, hearthbeat: n, service: { beginChangeLanguage: o, beginAuthentication: p, beginGetKey: m, hearthbeat: n } } }(); return h };