<?xml version="1.0"?>
<doc>
    <assembly>
        <name>SimaticIT.DataModel</name>
    </assembly>
    <members>
        <member name="T:Siemens.SimaticIT.DataModel.Attributes.LibraryHashCodeAttribute">
            <summary>
            Assembly attribute to specify the library hashcode
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Attributes.LibraryHashCodeAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="hashcode"></param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.LibraryHashCodeAttribute.HashCode">
            <summary>
            Library Hash Code
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Attributes.LibraryIdentifierAttribute">
            <summary>
            Assembly attribute to specify the library identifier
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Attributes.LibraryIdentifierAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="identifier"></param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.LibraryIdentifierAttribute.Identifier">
            <summary>
            Library identifier
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Attributes.LibraryToolVersionAttribute">
            <summary>
            Assembly attribute to specify the library tool versioon
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Attributes.LibraryToolVersionAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="version"></param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.LibraryToolVersionAttribute.ToolVersion">
            <summary>
            Tool version
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Attributes.TargetDomainNameAttribute">
            <summary>
            Assembly attribute describing bounded context
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Attributes.TargetDomainNameAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.TargetDomainNameAttribute.DomainName">
            <summary>
            Name of the target domain
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Attributes.ProviderType">
            <summary>
            Specifies the category of an assembly.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Attributes.ProviderType.System">
            <summary>
            Assembly contains system entities.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Attributes.ProviderType.ThirdParty">
            <summary>
            Assembly contains third party entities.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Attributes.ProviderType.PublicObjectModel">
            <summary>
            Assembly contains public object model entities.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Attributes.TargetProviderTypeAttribute">
            <summary>
            Assembly attribute describing the category
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Attributes.TargetProviderTypeAttribute.#ctor(Siemens.SimaticIT.DataModel.Attributes.ProviderType)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.TargetProviderTypeAttribute.ProviderType">
            <summary>
            Type of the target provider
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Attributes.ModelType">
            <summary>
            Specifies the kind of data model contained into an assembly.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Attributes.ModelType.Unknown">
            <summary>
            Assembly contains unknown model entities.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Attributes.ModelType.Reading">
            <summary>
            Assembly contains reading model entities.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Attributes.ModelType.Writing">
            <summary>
            Assembly contains writing model entities.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Attributes.TargetModelTypeAttribute">
            <summary>
            Assembly attribute describing target model
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Attributes.TargetModelTypeAttribute.#ctor(Siemens.SimaticIT.DataModel.Attributes.ModelType)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.TargetModelTypeAttribute.ModelType">
            <summary>
            Type of the target model
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Attributes.PrefixAttribute">
            <summary>
            Assembly attribute describing bounded context
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Attributes.PrefixAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.PrefixAttribute.Prefix">
            <summary>
            Name of the prefix
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Attributes.TargetDomainShortNameAttribute">
            <summary>
            Assembly attribute describing bounded context
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Attributes.TargetDomainShortNameAttribute.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.TargetDomainShortNameAttribute.DomainShortName">
            <summary>
            Name of the target domain short name
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Attributes.TypeAliasAttribute">
            <summary>
            Assembly attribute describing type aliasing.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Attributes.TypeAliasAttribute.#ctor(System.String,System.String,System.String,System.String,System.String,System.String,System.String[])">
            <summary>
            Constructor
            </summary>
            <param name="alias">Type alias</param>
            <param name="domain">Domain containing type alias</param>
            <param name="type">Type definition</param>
            <param name="nodeName">Type node: system or decimal node</param>
            <param name="precision">Precision of decimal type</param>
            <param name="scale">Scale of decimal type</param>
            <param name="annotations">Annotations</param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.TypeAliasAttribute.Alias">
            <summary>
            Type alias
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.TypeAliasAttribute.Domain">
            <summary>
            Domain containing type alias
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.TypeAliasAttribute.Type">
            <summary>
            Type definition
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.TypeAliasAttribute.NodeName">
            <summary>
            Type node: system or decimal node
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.TypeAliasAttribute.Precision">
            <summary>
            Precision of decimal type
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.TypeAliasAttribute.Scale">
            <summary>
            Scale of decimal type
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Attributes.TypeAliasAttribute.Annotations">
            <summary>
            Annotations
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.ConvertToTimeSpan(Siemens.SimaticIT.DataModel.Automation.IAutomationEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.ConvertToDateTimeOffset(Siemens.SimaticIT.DataModel.Automation.IAutomationEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.ConvertToString(Siemens.SimaticIT.DataModel.Automation.IAutomationEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.ConvertToGuid(Siemens.SimaticIT.DataModel.Automation.IAutomationEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.ConvertToBigInt(Siemens.SimaticIT.DataModel.Automation.IAutomationEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.ConvertToInt(Siemens.SimaticIT.DataModel.Automation.IAutomationEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.ConvertToSmallInt(Siemens.SimaticIT.DataModel.Automation.IAutomationEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.ConvertToTinyInt(Siemens.SimaticIT.DataModel.Automation.IAutomationEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.ConvertToBool(Siemens.SimaticIT.DataModel.Automation.IAutomationEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.ConvertTo``1(System.Object,System.String)">
            <summary>
            
            </summary>
            <typeparam name="TRet"></typeparam>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.ConvertTo``1(Siemens.SimaticIT.DataModel.Automation.IAutomationEntity,System.String)">
            <summary>
            
            </summary>
            <typeparam name="TRet"></typeparam>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.GetParameterName(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.GetParameterName(Siemens.SimaticIT.DataModel.Automation.IAutomationEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.GetParameter(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.GetParameter(Siemens.SimaticIT.DataModel.Automation.IAutomationEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.GetParameterAutomationValue(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.AutomationParameterConversion.GetParameterAutomationValue(Siemens.SimaticIT.DataModel.Automation.IAutomationEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="parameterName"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.AutomationConversion.ParameterConversionFailedException">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.ParameterConversionFailedException.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.ParameterConversionFailedException.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.ParameterConversionFailedException.#ctor(System.String,System.Exception)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.AutomationConversion.ParameterConversionFailedException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Automation.IAutomationEntityInternal">
            <summary>
            Describes the set of internal methods that are required to manage an automation entity.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Automation.IAutomationParameter">
            <summary>
            Describes an Automation Parameter.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Automation.IAutomationParameter.Name">
            <summary>
            Parameter Name.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Automation.IAutomationParameter.AutomationValue">
            <summary>
            Parameter Value.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Automation.AutomationQualityStatus">
            <summary>
            Defines the Automation Quality Status Enum
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualityStatus.Bad">
            <summary>
            Bad Quality. The value is not useful for the reasons indicated by the sub-status.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualityStatus.Uncertain">
            <summary>
            Uncertain Quality. The quality of the value is lower than normal, but the value can still be useful. The reason is indicated by the sub-status.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualityStatus.Good">
            <summary>
            The quality of the value is good.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus">
            <summary>
            Defines the Automation Quality Sub Status Enum
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsBNonSpecific">
            <summary>
            There is no specific reason why the value is BAD.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsBConfigError">
            <summary>
            The value is not useful because of some inconsistency regarding the con-figuration.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsBNotConnected">
            <summary>
            The value is not reliable because the connection to the provider has been disconnected at consumer-side.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsBDeviceFailure">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsBSensorFailure">
            <summary>
            The value is not useful because it cannot be converted.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsBNoCommValueOk">
            <summary>
            The value is not useful because the communication to the data source failed,
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsBNoCommNoValue">
            <summary>
            The value is not useful because the communication to the data source failed or has never been established since it was last out of service and a last known value is not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsBOutOfService">
            <summary>
            The value is not reliable because the provider side has been disabled or shut-down.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsUNonSpecific">
            <summary>
            There is no specific reason why the value is UNCERTAIN.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsULastValueOk">
            <summary>
            The connection to the data source is still established; however the data source stopped updating the value for some reason.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsUSubstituteValue">
            <summary>
            A predefined value is used in case of an invalid value due to communication issues with the data source or a range violation.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsUInitialValue">
            <summary>
            A predefined value intended for the startup of the HMI system (or a sub-ordinate device) is used while not being able provide values from the data source.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsUSensorConversion">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsUEngineeringUnitViolation">
            <summary>
            The value lies outside the range defined by min value and max value.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsUSubNormal">
            <summary>
            A value derived from multiple values has less than the required number of good sources.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsUConfigError">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsUSimulatedValue">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsUSensorCalibration">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsGOk">
            <summary>
            No error or special condition is associated with this value.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsGUpdateEvent">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsGAdvisoryAlarm">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsGCriticalAlarm">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsGUnackUpdateEvent">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsGUnackAdvisoryAlarm">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsGUnackCriticalAlarm">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsGInitFailsafe">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsGMaintenanceRequired">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsCOk">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsCInitAcked">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsCInitreq">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsCNotInvited">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsCDoNotSelect">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsCLocalOverride">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Automation.AutomationQualitySubStatus.QcsCInitFailsafe">
            <summary>
            Not available.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Automation.IAutomationValue">
            <summary>
            Defines the Automation Parameter Value.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Automation.IAutomationValue.Quality">
            <summary>
            Represents the full quality value returned by the automation. The information of the quality is contained in <see cref="P:Siemens.SimaticIT.DataModel.Automation.IAutomationValue.QualityStatus"/> and <see cref="P:Siemens.SimaticIT.DataModel.Automation.IAutomationValue.QualitySubStatus"/>
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Automation.IAutomationValue.QualityStatus">
            <summary>
            Represents a mask applied to the IAutomationValue.Quality property which returns the main quality information (bad, uncertain, good).
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Automation.IAutomationValue.QualitySubStatus">
            <summary>
            Represents a mask applied to the IAutomationValue.Quality property which returns more details if the quality is not good.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Automation.IAutomationValue.Timestamp">
            <summary>
            Represents the Timestamp in UTC of the AutomationValue.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Automation.IAutomationValue.Error">
            <summary>
            Represents the Error returned by the Automation Gateway Server. If the value is 0, it means that the operation was successful. 
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Automation.IAutomationValue.Value">
            <summary>
            Represents the value of the AutomationValue.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Automation.IAutomationEntity">
            <summary>
            Describes the automation attributes that are required to define the Automation node.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Automation.IAutomationEntity.NodeId">
            <summary>
            Automation Node Identifier.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Automation.IAutomationEntity.AutomationParameters">
            <summary>
            The key-value list of the Automation Parameters for the Automation Node.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Core.LoaderSearchStrategy">
            <summary>
            Enumerates the available assembly search strategies
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Core.LoaderSearchStrategy.Automatic">
            <summary>
            Automatic search
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Core.LoaderSearchStrategy.Custom">
            <summary>
            Custom search
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Core.LibraryLoaderSettings">
            <summary>
            Configures the library loader settings
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryLoaderSettings.SearchStrategy">
            <summary>
            Configures the library loader search strategy
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryLoaderSettings.CustomSearchPath">
            <summary>
            Configures the custom search path (Valid for Custom SearchStrategy)
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Core.ConfigurationFactory">
            <summary>
            Creates an instance of the requested configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.ConfigurationFactory.CreateEntityConfiguration``1(System.String)">
            <summary>
            Creates an instance of an entity configuration.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.ConfigurationFactory.CreateStructureConfiguration``1(System.String)">
            <summary>
            Creates an instance of a structure configuration.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.ConfigurationFactory.CreateEnumeratorConfiguration``1(System.String)">
            <summary>
            Creates an instance of an enumerator configuration.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.ConfigurationFactory.CreateIndexConfiguration``1(System.String)">
            <summary>
            Creates an instance of an index configuration.
            </summary>
            <param name="name"></param>
            <typeparam name="T"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.ConfigurationFactory.CreateRelationshipConfiguration``2(System.String)">
            <summary>
            Creates an instance of a relationship configuration.
            </summary>
            <param name="name"></param>
            <typeparam name="TFrom"></typeparam>
            <typeparam name="TTo"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.ConfigurationFactory.CreateRelationshipDetailConfiguration``3(System.String,System.String,System.String)">
            <summary>
            Creates and instance of a relationship detail configuration
            </summary>
            <param name="foreignKey"></param>
            <param name="forwardNavigation"></param>
            <param name="backNavigation"></param>
            <typeparam name="T"></typeparam>
            <typeparam name="TFrom"></typeparam>
            <typeparam name="TTo"></typeparam>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.ConfigurationFactory.CreatePropertyConfiguration``1(System.String,System.Type)">
            <summary>
            Creates an instance of a property configuration.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="name"></param>
            <param name="nestedType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.ConfigurationFactory.CreatePropertyConfiguration(System.Type,System.String,System.Type)">
            <summary>
            Creates an instance of a property configuration.
            </summary>
            <param name="configurationType"></param>
            <param name="name"></param>
            <param name="nestedType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.ConfigurationFactory.CreateRelationshipDetailConfiguration(System.Type,System.String,System.String,System.String)">
            <summary>
            Creates an instance of a relationship detail configuration.
            </summary>
            <param name="configurationType"></param>
            <param name="foreignKey"></param>
            <param name="forwardNavigation"></param>
            <param name="backNavigation"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Core.LibraryInfoComparer">
            <summary>
            Specific comparer for library objects
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.LibraryInfoComparer.Equals(Siemens.SimaticIT.DataModel.Core.LibraryInfo,Siemens.SimaticIT.DataModel.Core.LibraryInfo)">
            <summary>
            Determines whether the specified objects are equal.
            </summary>
            <returns>
            true if the specified objects are equal; otherwise, false.
            </returns>
            <param name="x">The first object of type <paramref name="x"/> to compare.</param><param name="y">The second object of type <paramref name="y"/> to compare.</param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.LibraryInfoComparer.GetHashCode(Siemens.SimaticIT.DataModel.Core.LibraryInfo)">
            <summary>
            Returns a hash code for the specified object.
            </summary>
            <returns>
            A hash code for the specified object.
            </returns>
            <param name="obj">The <see cref="T:System.Object"/> for which a hash code is to be returned.</param><exception cref="T:System.ArgumentNullException">The type of <paramref name="obj"/> is a reference type and <paramref name="obj"/> is null.</exception>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Core.LibraryDependency">
            <summary>
            Provides a set of informations about a library dependency
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryDependency.Name">
            <summary>
            Name of the dependency
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryDependency.FullName">
            <summary>
            FullName of the dependency
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.LibraryDependency.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Core.DescriptorVisibility">
            <summary>
            Enumerates the visibility state of a descriptor
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Core.DescriptorVisibility.Visible">
            <summary>
            Mean that the descriptor will be registered to the underlying context.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Core.DescriptorVisibility.Hidden">
            <summary>
            Mean that the descriptor will be ignored by the underlying context.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Core.DescriptorTarget">
            <summary>
            Enumerates the target of a descritor
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Core.DescriptorTarget.Entity">
            <summary>
            Entity
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Core.DescriptorTarget.Structure">
            <summary>
            Structure
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Core.DescriptorTarget.Enumerator">
            <summary>
            Enumerator
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Core.DescriptorTarget.Index">
            <summary>
            Index
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Core.DescriptorTarget.Relationship">
            <summary>
            Relationship
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Core.DescriptorInfo">
            <summary>
            Exposes the internal data of a descriptor.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.DescriptorInfo.Library">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.DescriptorInfo.DescriptorType">
            <summary>
            The type of the descriptor.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.DescriptorInfo.TargetTypes">
            <summary>
            The element described by the descriptor.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.DescriptorInfo.DescriptorInstance">
            <summary>
            An instance of the descriptor.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.DescriptorInfo.ConfigurationInstance">
            <summary>
            An instance of the underlying configuration.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.DescriptorInfo.DescriptorVisibility">
            <summary>
            The visibility of the descriptor.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.DescriptorInfo.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Core.DescriptorLoader">
            <summary>
            The global descriptor loader.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.DescriptorLoader.#ctor(Siemens.SimaticIT.DataModel.Diagnostics.DataModelDiagnostic,Siemens.SimaticIT.DataModel.Core.ConfigurationFactory,System.Func{System.Type,Siemens.SimaticIT.DataModel.Core.DescriptorVisibility})">
            <summary>
            Constructor
            </summary>
            <param name="diagnostic"></param>
            <param name="configurationFactory"></param>
            <param name="descriptorVisibilityFunction"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.DescriptorLoader.Load(Siemens.SimaticIT.DataModel.Core.Library)">
            <summary>
            Load descriptors from a list of assembly
            </summary>
            <param name="library"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Core.DescriptorType">
            <summary>
            Describes the type of a descriptor.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.DescriptorType.Name">
            <summary>
            Name of the type
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.DescriptorType.FullName">
            <summary>
            FullName of the type
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.DescriptorType.Target">
            <summary>
            The described target element
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.DescriptorType.TargetTypes">
            <summary>
            The described target types
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.DescriptorType.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Core.LibraryVersion">
            <summary>
            Provides informations about the library version
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryVersion.ProjectVersion">
            <summary>
            Project version
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryVersion.Major">
            <summary>
            Major version
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryVersion.Minor">
            <summary>
            Minor Version
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryVersion.Patch">
            <summary>
            Patch Version
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.LibraryVersion.ToString">
            <summary>Returns a string that represents the current object.</summary>
            <returns>A string that represents the current object.</returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Core.Library">
            <summary>
            Describes a library
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.Library.#ctor(System.String,System.String,System.String,System.String)">
            <summary>
            Constructor
            </summary>
            <param name="name"></param>
            <param name="domainName"></param>
            <param name="repositoryName"></param>
            <param name="dataProviderName"></param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.Library.Name">
            <summary>
            Public Library Name
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.Library.FullName">
            <summary>
            Public Library Name
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.Library.PublicAssemblyReference">
            <summary>
            Public Assembly Name
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.Library.InternalAssemblyReference">
            <summary>
            Internal Assembly Name
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.Library.PublicAssembly">
            <summary>
            Public Assembly
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.Library.InternalAssembly">
            <summary>
            Internal Assembly
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.Library.AssemblyDependencies">
            <summary>
            Public Assembly Dependencies
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.Library.DataProviderName">
            <summary>
            Data Provider Name
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.Library.RepositoryName">
            <summary>
            Repository Name
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.Library.DomainName">
            <summary>
            Domain Name
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.Library.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Core.LibraryInfo">
            <summary>
            Provides a set of informations about a loaded library
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryInfo.Name">
            <summary>
            Name of the library
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryInfo.FullName">
            <summary>
            Full name of the library
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryInfo.Source">
            <summary>
            Source library
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryInfo.Dependencies">
            <summary>
            Library dependencies
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryInfo.VirtualDomainName">
            <summary>
            Virtual Domain
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryInfo.ModelType">
            <summary>
            Model Type
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryInfo.ProviderType">
            <summary>
            Provider Type
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryInfo.Identifier">
            <summary>
            Library Identifier
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryInfo.HashCode">
            <summary>
            Library HashCode
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryInfo.ToolVersion">
            <summary>
            Library Tool Version
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryInfo.ProjectVersion">
            <summary>
            Library Project Version
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryInfo.Descriptors">
            <summary>
            Loaded descriptors
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.LibraryInfo.ToString">
            <summary>
            Returns a string that represents the current object.
            </summary>
            <returns>
            A string that represents the current object.
            </returns>
            <filterpriority>2</filterpriority>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Core.LibraryLoader">
            <summary>
            Loads a data model library
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.LibraryLoader.#ctor(Siemens.SimaticIT.DataModel.Diagnostics.DataModelDiagnostic,Siemens.SimaticIT.DataModel.Core.ConfigurationFactory)">
            <summary>
            Constructor
            </summary>
            <param name="diagnostic"></param>
            <param name="configurationFactory"></param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Core.LibraryLoader.Settings">
            <summary>
            Loader settings
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.LibraryLoader.Dispose">
            <summary>
            Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
            <filterpriority>2</filterpriority>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.LibraryLoader.Load(Siemens.SimaticIT.DataModel.Core.Library)">
            <summary>
            Loads a library
            </summary>
            <param name="library"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.LibraryLoader.Load(System.Type)">
            <summary>
            Loads a descriptor type encapsulating it into a new library
            </summary>
            <param name="descriptorType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Core.LibraryLoader.Load(System.Collections.Generic.IEnumerable{System.Type},System.String,System.String,System.String)">
            <summary>
            Loads a collection of descriptor types encapsulating it into a new library
            </summary>
            <param name="descriptorTypes"></param>
            <param name="domainName"></param>
            <param name="repositoryName"></param>
            <param name="dataProviderName"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.IRevisionEntityInternal">
            <summary>
            Describes the set of internal methods that are required to manage a revision entity.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.IRevisionEntityInternal.SetRevision(System.String)">
            <summary>
            Set Revision
            </summary>
            <param name="revision">Revision</param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.IRevisionEntityInternal.SetSourceRevision(System.String)">
            <summary>
            Set Source Revision
            </summary>
            <param name="sourceRevision">Source Revision</param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.IRevisionEntityInternal.SetIsCurrent(System.Boolean)">
            <summary>
            Set Is Current Flaf
            </summary>
            <param name="isCurrent">Flag</param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1.#ctor(System.Type,System.Object)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1.FirstOperation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1.LastOperation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1.QuantityOfOperations">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1.NeedsAlignmentOnDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1.ChangeHistory">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1.CurrentChanges">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1.ReferringObject">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1.TrackedType">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1.PushChanges(Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation)">
            <summary>
            
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1.SetSegmentOpeningOperation(System.Nullable{Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation})">
            <summary>
            
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1.SetSegmentClosingOperation(System.Nullable{Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation})">
            <summary>
            
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ChangeTrackerBase`1.InitCurrentChanges(System.Nullable{Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation})">
            <summary>
            
            </summary>
            <param name="operation"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypeChangeDetail">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypeChangeDetail.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Nullable{Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation},Siemens.SimaticIT.DataModel.TrackedStructure)">
            <summary>
            
            </summary>
            <param name="plainPropertyNames"></param>
            <param name="segmentOpeningOperation"></param>
            <param name="referringObject"></param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypeChangeDetail.PlainPropertyChanges">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypeChangeDetail.NeedsAlignmentOnDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypeChangeDetail.ReferringObject">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypeChangeDetail.SegmentOpeningOperation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypeChangeDetail.SegmentClosingOperation">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypeChangeDetail.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypeChangeTracker">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypeChangeTracker.#ctor(System.Type,Siemens.SimaticIT.DataModel.TrackedStructure)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypeChangeTracker.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypeChangeTracker.InitCurrentChanges(System.Nullable{Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation})">
            <summary>
            
            </summary>
            <param name="operation"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetailBase">
            <summary>
            
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetailBase._segmentOpeningOperation">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetailBase.#ctor(Siemens.SimaticIT.DataModel.TrackedEntity,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation})">
            <summary>
            
            </summary>
            <param name="referringObject"></param>
            <param name="plainPropertyNames"></param>
            <param name="foreignKeyPropertyNames"></param>
            <param name="manyToManyForeignKeyChanges"></param>
            <param name="complexTypePropertyNames"></param>
            <param name="segmentOpeningOperation"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetailBase.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetailBase.PlainPropertyChanges">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetailBase.ForeignKeyPropertyChanges">
            <summary>
            
            </summary>
            <remarks>
            This ensemble tracks one-to-one and one-to-many references only through
            their corresponding foreign-key properties (i.e. their sibling navigation properties
            and backward navigation properties are not present). Indeed, both backward-navigati on
            properties and forward navigations are tracked through the corresponding
            foreign-key properties which are always kept aligned.
            Many-to-many relations are tracked by taking note of the added/removed
            primary-keys on the forward side.
            </remarks>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetailBase.ManyToManyForeignKeyChanges">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetailBase.ComplexTypePropertyChanges">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetailBase.SegmentOpeningOperation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetailBase.SegmentClosingOperation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetailBase.NeedsAlignmentOnDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetailBase.ReferringObject">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetailBase.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeTrackerBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeTrackerBase.#ctor(System.Type,Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeTrackerBase.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeTrackerBase.InitCurrentChanges(System.Nullable{Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation})">
            <summary>
            
            </summary>
            <param name="operation"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IAlignableToDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IAlignableToDatabase.NeedsAlignmentOnDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IChangeTracker">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IChangeTracker.CurrentChanges">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IChangeTracker.ChangeHistory">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IChangeTracker.FirstOperation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IChangeTracker.LastOperation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IChangeTracker.QuantityOfOperations">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IChangeTracker.SetSegmentOpeningOperation(System.Nullable{Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation})">
            <summary>
            
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IChangeTracker.SetSegmentClosingOperation(System.Nullable{Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation})">
            <summary>
            
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IChangeTracker.PushChanges(Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation)">
            <summary>
            
            </summary>
            <param name="operation"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IChangesSegment">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IChangeTrackerComponent">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IClonable">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IClonable.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IClonable`1">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IClonable`1.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IOpeningAndClosingOperation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IOpeningAndClosingOperation.SegmentOpeningOperation">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IOpeningAndClosingOperation.SegmentClosingOperation">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.FacetChangeDetail">
            <summary>
            Structure containing information about the operations to which an entity is
            subjected to.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.FacetChangeDetail.#ctor(Siemens.SimaticIT.DataModel.TrackedEntity,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation})">
            <summary>
            
            </summary>
            <param name="referringEntity"></param>
            <param name="plainPropertyNames"></param>
            <param name="foreignKeyPropertyNames"></param>
            <param name="manyToManyForeignKeyChanges"></param>
            <param name="complexTypePropertyNames"></param>
            <param name="lastOperation"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.FacetChangeDetail.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.FacetChangeTracker">
            <summary>
            Structure containing information about the operations to which a facet is
            subjected to.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.FacetChangeTracker.#ctor(System.Type,Siemens.SimaticIT.DataModel.TrackedFacet)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.FacetChangeTracker.SetAssignedToForeignKeyProperty(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeTracker">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeTracker.#ctor(System.Type,Siemens.SimaticIT.DataModel.TrackedEntity)">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetail">
            <summary>
            Structure containing information about the operations to which an entity is
            subjected to.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetail.#ctor(Siemens.SimaticIT.DataModel.TrackedEntity,System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String},System.Nullable{Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation})">
            <summary>
            
            </summary>
            <param name="referringEntity"></param>
            <param name="plainPropertyNames"></param>
            <param name="foreignKeyPropertyNames"></param>
            <param name="manyToManyForeignKeyChanges"></param>
            <param name="complexTypePropertyNames"></param>
            <param name="lastOperation"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.EntityChangeDetail.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypePropertyChangeDetail">
            <summary>
            Structure containing information about the operations to which a complex type is
            subjected to.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypePropertyChangeDetail.#ctor(Siemens.SimaticIT.DataModel.TrackedEntity,System.String)">
            <summary>
            
            </summary>
            <param name="referringObject"></param>
            <param name="referringProperty"></param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypePropertyChangeDetail.NeedsAlignmentOnDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypePropertyChangeDetail.TrackSet(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypePropertyChangeDetail.TrackSet">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ComplexTypePropertyChangeDetail.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IChangeTracker`1">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IChangeTracker`1.CurrentChanges">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.IPropertyChangeDetail">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation">
            <summary>
            
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation.Create">
            <summary>
            
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation.Query">
            <summary>
            
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation.Submit">
            <summary>
            
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation.Delete">
            <summary>
            
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation.Freeze">
            <summary>
            
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation.Unfreeze">
            <summary>
            
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation.Lock">
            <summary>
            
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation.Unlock">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.CollectionPropertyChangeDetail">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.CollectionPropertyChangeDetail.#ctor(System.Object,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.CollectionPropertyChangeDetail.Added">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.CollectionPropertyChangeDetail.Removed">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.CollectionPropertyChangeDetail.NeedsAlignmentOnDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.CollectionPropertyChangeDetail.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.CollectionPropertyChangeDetail.TrackSet(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.CollectionPropertyChangeDetail.TrackSet">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChangeDetailBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChangeDetailBase.#ctor(System.Object,System.String)">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChangeDetailBase.Assigned">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChangeDetailBase.InitialValue">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChangeDetailBase.NeedsAlignmentOnDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChangeDetailBase.ReferringObject">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChangeDetailBase.ReferringProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChangeDetailBase.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChangeDetailBase.TrackSet(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChangeDetailBase.TrackSet">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChangeDetailBase.TrackSetForValueTypes(System.Object)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChangeDetailBase.TrackSetForValueTypes">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PlainPropertyChangeDetail">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PlainPropertyChangeDetail.#ctor(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="referringObject"></param>
            <param name="referringProperty"></param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PlainPropertyChangeDetail.NeedsAlignmentOnDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PlainPropertyChangeDetail.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PlainPropertyChangeDetail.TrackSet(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PlainPropertyChangeDetail.TrackSet">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ForeignKeyPropertyChangeDetail">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ForeignKeyPropertyChangeDetail.#ctor(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="referringObject"></param>
            <param name="referringProperty"></param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ForeignKeyPropertyChangeDetail.NeedsAlignmentOnDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ForeignKeyPropertyChangeDetail.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ForeignKeyPropertyChangeDetail.TrackSet(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="oldValue"></param>
            <param name="newValue"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.ForeignKeyPropertyChangeDetail.TrackSet">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChanges`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChanges`1.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Object)">
            <summary>
            
            </summary>
            <param name="propertyNames"></param>
            <param name="referringObject"></param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChanges`1.NeedsAlignmentOnDatabase">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChanges`1.PropertyNames">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChanges`1.Item(System.String)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChanges`1.GetEnumerator">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.ChangeTrackerContainer.PropertyChanges`1.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IBinaryPropertyConfiguration">
            <summary>
            Describes a Byte Array property configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IBinaryPropertyConfiguration.HasMaxLength(System.Int32)">
            <summary>
            Configures the maximum length of a Byte Array property.
            </summary>
            <param name="length">The maximum length to be assigned.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IEnumeratorConfiguration`1">
            <summary>
            Identifies a data-model enumerator configuration class.
            </summary>
            <typeparam name="TEnumerator"></typeparam>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEnumeratorConfiguration`1.HasConstant(System.String,System.Int32)">
            <summary>
            Configures an enumerator constant
            </summary>
            <param name="name">The constant name</param>
            <param name="value">The constant value</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IManyToManyRelationshipConfiguration`2">
            <summary>
            Describes a Many to Many relationship configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IManyToManyRelationshipConfiguration`2.HasUniqueIdentifier(System.String)">
            <summary>
            Defines the relationship unique identifier
            </summary>
            <param name="uid">The unique identifier</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IManyToManyRelationshipConfiguration`2.HasTableName(System.String,System.String)">
            <summary>
            Defines the database table name assigned to the current relationship.
            </summary>
            <param name="tableName">The physical table name</param>
            <param name="tableSchema">The physical table schema</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IManyToOneRelationshipConfiguration`2">
            <summary>
            Describes a Many to One relationship configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IManyToOneRelationshipConfiguration`2.WithBackNavigation(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{`0}}})">
            <summary>
            Configures the back navigation property for the current relationship.
            </summary>
            <param name="backNavigation">The expression identifying the back navigation property.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IManyToOneRelationshipConfiguration`2.IsComposition">
            <summary>
            Configures that this relationship implements the composition pattern.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IOneToOneRelationshipConfiguration`2">
            <summary>
            Describes a One to One relationship configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IOneToOneRelationshipConfiguration`2.WithBackNavigation(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{`0}}})">
            <summary>
            Configures the back navigation property for the current relationship.
            </summary>
            <param name="backNavigation">The expression identifying the back navigation property.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IOneToOneRelationshipConfiguration`2.IsComposition">
            <summary>
            Configures that this relationship implements the composition pattern.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IRelationshipDetailConfiguration`1">
            <summary>
            Describes a generic relationship entry configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IRelationshipDetailConfiguration`1.OnDelete(Siemens.SimaticIT.DataModel.DeleteAction)">
            <summary>
            Configures the delete action for the current relationship
            </summary>
            <param name="deleteAction"></param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IDateTimeOffsetPropertyConfiguration">
            <summary>
            Describes a DateTimeOffset property configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IDateTimeOffsetPropertyConfiguration.HasDefaultValue(System.DateTimeOffset)">
            <summary>
            Configures a default property value.
            </summary>
            <param name="value">The value to be used as default.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1">
            <summary>
            Identifies a data-model entity configuration class.
            </summary>
            <typeparam name="TStructure"></typeparam>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.Exclude``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Declares that the specified property is computed.
            </summary>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="propertyExpression">The expression identifying the property to be excluded.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.HasUniqueIdentifier(System.String)">
            <summary>
            Defines the structure unique identifier
            </summary>
            <param name="uid">The unique identifier</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.Implements``1">
            <summary>
            Declare that current structure implements an interface
            </summary>
            <typeparam name="TInterface">The structure interface implemented by this structure.</typeparam>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.HasLogicalName(System.String)">
            <summary>
            Defines the logical name of the current structure.
            </summary>
            <param name="logicalName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTimeOffset}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTimeOffset}}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.TimeSpan}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.TimeSpan}}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStructureConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IConfiguration">
            <summary>
            Identifies a data model configuration class.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1">
            <summary>
            Identifies a data-model entity configuration class.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.Exclude``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Declares that the specified property is computed.
            </summary>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="propertyExpression">The expression identifying the property to be excluded.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.Extends``1">
            <summary>
            Declares that current entity is an extension.
            </summary>
            <typeparam name="TEntityToExtend">The base entity type extended by this entity.</typeparam>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.Implements``1">
            <summary>
            Declare that current entity implements an interface
            </summary>
            <typeparam name="TInterface">The entity interface implemented by this entity.</typeparam>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.IsSealed">
            <summary>
            Declares that current entity as sealed.
            </summary>
            <returns>The configuration instance</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.BelongsToDomain(System.String)">
            <summary>
            Defines the domain of the current entity.
            </summary>
            <param name="domainName">The domain name</param>
            <returns>The configuration instance</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.HasUniqueIdentifier(System.String)">
            <summary>
            Defines the entity unique identifier
            </summary>
            <param name="uid">The unique identifier</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.HasPrimaryKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Defines the primary key of the current entity.
            </summary>
            <param name="propertyExpressions">The expression identifying the list of properties to be used as primary key.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.HasLogicalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Defines the logical key of the current entity.
            </summary>
            <param name="propertyExpressions">The expression identifying the list of properties to be used as logical key</param>
            <returns>The configuration instance</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.HasLogicalName(System.String)">
            <summary>
            Defines the logical name of the current entity.
            </summary>
            <param name="logicalName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.HasTableName(System.String,System.String)">
            <summary>
            Defines the database table name assigned to the current entity.
            </summary>
            <param name="tableName">The physical table name</param>
            <param name="tableSchema">The physical table schema</param>
            <returns>The configuration instance</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.HasLogicalDiscriminator(System.String)">
            <summary>
            Defines the logical discriminator of the current entity.
            </summary>
            <param name="discriminator">The logical discriminator</param>
            <returns>The configuration instance</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.HasUnrestrictedAccess">
            <summary>
            Defines the current entity as unrestricted.
            </summary>
            <returns>The configuration instance</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTimeOffset}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTimeOffset}}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.TimeSpan}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.TimeSpan}}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IEntityConfiguration`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IIndexConfiguration`1">
            <summary>
            Identifies an index configuration class.
            </summary>
            <typeparam name="TEntity"></typeparam>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IIndexConfiguration`1.HasIndex(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Configures an index
            </summary>
            <param name="propertyExpressions">The expression identifying the index properties.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IIndexConfiguration`1.HasIndex(Siemens.SimaticIT.DataModel.IndexBehavior,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Configures an index
            </summary>
            <param name="behavior">The index behavior.</param>
            <param name="propertyExpressions">The expression identifying the index properties.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IPrimitivePropertyConfiguration`1">
            <summary>
            Describes a generic property configuration.
            </summary>
            <typeparam name="TProperty">The type to which configuration refers.</typeparam>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IPrimitivePropertyConfiguration`1.HasDefaultValue(`0)">
            <summary>
            Configures a default property value.
            </summary>
            <param name="value">The value to be used as default.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IPrimitivePropertyConfiguration`1.HasRange(System.Int32,System.Int32)">
            <summary>
            Configures the range of the property value.
            </summary>
            <param name="minValue">The minimum value.</param>
            <param name="maxValue">The maximum value.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IPropertyConfiguration`1">
            <summary>
            Describes a generic property configuration.
            </summary>
            <typeparam name="TPropertyConfiguration">Type of property configuration to be used.</typeparam>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IPropertyConfiguration`1.HasUniqueIdentifier(System.String)">
            <summary>
            Defines the property unique identifier
            </summary>
            <param name="uid">The unique identifier</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IPropertyConfiguration`1.HasColumnName(System.String)">
            <summary>
            Configures the database column name
            </summary>
            <param name="columnName">The column name</param>
            <returns>The configuration instance</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IPropertyConfiguration`1.IsMandatory">
            <summary>
            Marks the property as mandatory
            </summary>
            <returns>The configuration instance</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IPropertyConfiguration`1.IsReadOnly">
            <summary>
            Marks the property as readonly
            </summary>
            <returns>The configuration instance</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IPropertyConfiguration`1.IsReference(System.String,System.String)">
            <summary>
            Marks the property as reference
            </summary>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IPropertyConfiguration`1.ImplementsBehavior(System.Type)">
            <summary>
            Marks the property as implementation of a specific behavior
            </summary>
            <param name="behaviorInterface">The interface of the behavior</param>
            <returns>The configuration instance</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IDecimalPropertyConfiguration">
            <summary>
            Describes a Decimal property configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IDecimalPropertyConfiguration.HasDefaultValue(System.Decimal)">
            <summary>
            Configures a default property value.
            </summary>
            <param name="value">The value to be used as default.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IDecimalPropertyConfiguration.HasPrecision(System.Byte)">
            <summary>
            Configures the decimal property precision.
            </summary>
            <param name="precision">The precision to be used.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IDecimalPropertyConfiguration.HasPrecision(System.Byte,System.Byte)">
            <summary>
            Configures the decimal property precision and scale.
            </summary>
            <param name="precision">The precision to be used.</param>
            <param name="scale">The scale to be used.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IDecimalPropertyConfiguration.HasRange(System.Decimal,System.Decimal)">
            <summary>
            Configures the range of the property value.
            </summary>
            <param name="minValue">The minimum value.</param>
            <param name="maxValue">The maximum value.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IRelationshipConfiguration`2">
            <summary>
            Describes an entity relationship configuration.
            </summary>
            <typeparam name="TEntityFrom">Type of entity from which the relationship starts.</typeparam>
            <typeparam name="TEntityTo">Type of entity to which the relationship ends.</typeparam>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IRelationshipConfiguration`2.HasOneToOne``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}},System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Configures a "One to One" entity relationship.
            </summary>
            <param name="foreignKey">The expression identifying the foreign key property.</param>
            <param name="forwardNavigation">The expression identifying the forward navigation property.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IRelationshipConfiguration`2.HasOneToOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Configures the foreign key property for the current relationship.
            </summary>
            <param name="foreignKey">The expression identifying the foreign key property.</param>
            <param name="forwardNavigation">The expression identifying the forward navigation property.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IRelationshipConfiguration`2.HasManyToOne``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}},System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Configures a "Many to One" entity relationship.
            </summary>
            <param name="foreignKey">The expression identifying the foreign key property.</param>
            <param name="forwardNavigation">The expression identifying the navigation property.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IRelationshipConfiguration`2.HasManyToOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Configures a "Many to One" entity relationship.
            </summary>
            <param name="foreignKey">The expression identifying the foreign key property.</param>
            <param name="forwardNavigation">The expression identifying the navigation property.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IRelationshipConfiguration`2.HasManyToMany(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{`1}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{`0}}})">
            <summary>
            Configures a "Many to Many" entity relationship.
            </summary>
            <param name="forwardNavigation">The expression identifying the forward navigation property.</param>
            <param name="backNavigation">The expression identifying the back navigation property.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IDateTimePropertyConfiguration">
            <summary>
            Describes a DateTime property configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IDateTimePropertyConfiguration.HasDefaultValue(System.DateTime)">
            <summary>
            Configures a default property value.
            </summary>
            <param name="value">The value to be used as default.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Configuration.IStringPropertyConfiguration">
            <summary>
            Describes a String property configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStringPropertyConfiguration.HasDefaultValue(System.String)">
            <summary>
            Configures a default property value.
            </summary>
            <param name="value">The value to be used as default.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStringPropertyConfiguration.HasMaxLength(System.Int32)">
            <summary>
            Configures the maximum length of a string property.
            </summary>
            <param name="length">The maximum length to be assigned.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Configuration.IStringPropertyConfiguration.HasLengthRange(System.Int32,System.Int32)">
            <summary>
            Configures the range of the property value.
            </summary>
            <param name="minLength">The minimum length.</param>
            <param name="maxLength">The maximum length.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Diagnostics.DataModelDiagnostic">
            <summary>
            A diagnostic wapper to be used inside of the DataModel library.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Diagnostics.DataModelDiagnostic.WrapTraceMethod(System.Action{System.Char,System.String,System.Object[]})">
            <summary>
            Creates a new instance of the diagnostic wrapper.
            </summary>
            <param name="writeMethod"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Entity">
            <summary>
            Base entity class implementing the IEntity interface.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Entity.#ctor">
            <summary>
            Constructor of Entity class.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Entity.Id">
            <summary>
            Primary identifier. It is used as primary key.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Entity.AId">
            <summary>
            Natural identifier. It can be used as logical key.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Entity.IsFrozen">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Entity.ConcurrencyVersion">
            <summary>
            Version number to support optimistic concurrency.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Entity.IsDeleted">
            <summary>
            Flag to support logical deletion.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Entity.CreatedOn">
            <summary>
            Creation date and time.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Entity.LastUpdatedOn">
            <summary>
            Last update date and time.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Entity.EntityType">
            <summary>
            Type of the entity (imported from POC code base).
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Entity.OptimisticVersion">
            <summary>
            Version byte to support optimistic concurrency.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Entity.ConcurrencyToken">
            <summary>
            Identifies the concurrency token, used for optimistic concurrency.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Entity.IsLocked">
            <summary>
            Mark current entity as locked
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Entity.ToString">
            <summary>
            Returns a string representation.
            </summary>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.EntityAndPropertyNames">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.EntityAndPropertyNames.Entity">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.EntityAndPropertyNames.PropertyNames">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.EnumeratorDescriptor`1">
            <summary>
            Defines an enumerator descriptor.
            </summary>
            <typeparam name="TEnumerator"></typeparam>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EnumeratorDescriptor`1.#ctor">
            <summary>
            Default constructor of the enumerator descriptor.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.EnumeratorDescriptor`1.TargetTypes">
            <summary>
            Exposes the target type of the configuration.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.EnumeratorDescriptor`1.Configuration">
            <summary>
            Exposes an instance of the configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EnumeratorDescriptor`1.HasConstant(System.String,System.Int32)">
            <summary>
            Configures an enumerator constant
            </summary>
            <param name="name">The constant name</param>
            <param name="value">The constant value</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Exceptions.DataModelException">
            <summary>
            A base class for DataModel library exceptions
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Exceptions.DataModelException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Exceptions.DataModelException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Exceptions.DataModelException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
            <param name="innerException"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Exceptions.DataModelException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Exceptions.InvalidMandatoryValueException">
            <summary>
            Exception class describing an invalid mandatory value
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Exceptions.InvalidMandatoryValueException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Exceptions.InvalidModelConfigurationException">
            <summary>
            Exception class describing an invalid model configuration
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Exceptions.InvalidModelConfigurationException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Exceptions.InvalidModelOperationException">
            <summary>
            Exception class describing an invalid model operation
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Exceptions.InvalidModelOperationException.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Exceptions.InvalidModelOperationException.#ctor(System.String)">
            <summary>
            Constructor
            </summary>
            <param name="message"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Facet">
            <summary>
            Base facet class implementing the IFacet interface.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.IExtendedQueryable">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.IExtendedQueryable.IncludeEx(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.IExtendedQueryable`1">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.IExtendedQueryable`1.IncludeEx(System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.IExtendedQueryable`1.IncludeEx``2(System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
            
            </summary>
            <typeparam name="T2"></typeparam>
            <typeparam name="TProperty"></typeparam>
            <param name="path"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.IPrimitiveEntity">
            <summary>
            Provides the possibility to use third-party entities.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.IRevisionEntity">
            <summary>
            Describes the minimum set of attributes that are required to define a versioned entity.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IRevisionEntity.Revision">
            <summary>
            Revision string
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IRevisionEntity.SourceRevision">
            <summary>
            Source Revision string
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IRevisionEntity.IsLocked">
            <summary>
            Mark current entity as locked
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IRevisionEntity.IsCurrent">
            <summary>
            Mark current entity as current
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.PropertyNameAndValue">
            <summary>
            Describes the name and the value of a property.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.PropertyNameAndValue.#ctor(System.String,System.Object)">
            <summary>
            Constructor. 
            </summary>
            <param name="name">Property name</param>
            <param name="value">Property value</param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.PropertyNameAndValue.Name">
            <summary>
            Property name.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.PropertyNameAndValue.Value">
            <summary>
            Property value.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.PropertyNameAndValue.Equals(System.Object)">
            <summary>
            Determines whether the specified object is equal to the current PropertyNameAndValue. 
            </summary>
            <param name="input">The object to compare with the current PropertyNameAndValue.</param>
            <returns>If true, the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.PropertyNameAndValue.Equals(Siemens.SimaticIT.DataModel.PropertyNameAndValue)">
            <summary>
            Determines whether the specified PropertyNameAndValue is equal to the current PropertyNameAndValue.
            </summary>
            <param name="input">The PropertyNameAndValue to compare with the current PropertyNameAndValue.</param>
            <returns>If true, the specified object is equal to the current object; otherwise, false.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.PropertyNameAndValue.GetHashCode">
            <summary>
            Returns the hash code for this instance.
            </summary>
            <returns>A hash code for the current instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.PropertyNameAndValue.ToString">
            <summary>
            Converts the value of this instance to its equivalent string representation.
            </summary>
            <returns>The string representation.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.RevisionEntity">
            <summary>
            Base entity class implementing the IRevisionEntity interface.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.RevisionEntity.#ctor">
            <summary>
            Constructor of RevisionEntity class.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.RevisionEntity.Revision">
            <summary>
            Revision string
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.RevisionEntity.SourceRevision">
            <summary>
            Source Revision string
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.RevisionEntity.IsCurrent">
            <summary>
            Mark current entity as current
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.TrackedRevisionEntity">
            <summary>
            Base entity class implementing the IRevisionEntity interface.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.TrackedRevisionEntity.Revision">
            <summary>
            Revision string
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.TrackedRevisionEntity.SourceRevision">
            <summary>
            Source Revision string
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.TrackedRevisionEntity.IsCurrent">
            <summary>
            Mark current entity as current
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.TrackedRevisionEntity.SetRevision(System.String)">
            <summary>
            
            </summary>
            <param name="revision"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.TrackedRevisionEntity.SetSourceRevision(System.String)">
            <summary>
            
            </summary>
            <param name="sourceRevision"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.TrackedRevisionEntity.SetIsCurrent(System.Boolean)">
            <summary>
            
            </summary>
            <param name="isCurrent"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.CombinationsExtension">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.CombinationsExtension.Combinations``1(System.Collections.Generic.IEnumerable{``0},System.Int32)">
            <summary>
            Combinationses the specified k.
            </summary>
            <typeparam name="T"></typeparam>
            <param name="elements">The elements.</param>
            <param name="k">The k.</param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.HierarchyStack">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HierarchyStack.GetAllDerived(System.Type)">
            <summary>
            
            </summary>
            <param name="entityInterfaceType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HierarchyStack.CreateStack(System.Type)">
            <summary>
            
            </summary>
            <param name="entityInterfaceType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HierarchyStack.CreateStack(System.Type,System.Collections.Generic.Dictionary{System.Type,Siemens.SimaticIT.DataModel.Utilities.StickyModel.EntityModel})">
            <summary>
            
            </summary>
            <param name="entityInterfaceType"></param>
            <param name="stickyModel"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HierarchyStack.GetRootClassType(System.Type)">
            <summary>
            
            </summary>
            <param name="entityType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HierarchyStack.CreateStack(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.MiscUtils">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.MiscUtils.CopyCollectionByRebuild(System.Collections.IList,System.Collections.IList)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="target"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.MiscUtils.AreObjectsEqualForNullables(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="object1"></param>
            <param name="object2"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.MiscUtils.GetHashCodeForNullables(System.Object)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.Benchmarks.Benchmarker">
            <summary>
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.Benchmarks.Benchmarker.#ctor(System.String)">
            <summary>
            </summary>
            <param name="name"></param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.Benchmarks.Benchmarker.AlternativeLayout">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.Benchmarks.Benchmarker.RawWithCurrentCulture">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.Benchmarks.Benchmarker.RawWrite(System.String)">
            <summary>
            
            </summary>
            <param name="input"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.Benchmarks.Benchmarker.Dispose">
            <summary>
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.HashCodesHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HashCodesHelper.CombineHashCodesNonCommutatively(System.Collections.Generic.IList{System.Int32})">
            <summary>
            
            </summary>
            <param name="hashCodes"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HashCodesHelper.CombineHashCodesCommutatively(System.Collections.Generic.IEnumerable{System.Int32})">
            <summary>
            
            </summary>
            <param name="hashCodes"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HashCodesHelper.CombineHashCodesCommutatively(System.Collections.Generic.IEnumerable{System.Byte[]})">
            <summary>
            
            </summary>
            <param name="hashCodes"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HashCodesHelper.GetHashCodeForKeyValuePair(System.Object,System.Object)">
            <summary>
            
            </summary>
            <param name="key"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1">
            <summary>
            public surface of this collection
            </summary>
            <typeparam name="T"></typeparam>
            <summary>
            internal non-signaling methods
            These are used to avoid re-entrancy when
            two or more collections are linked to each other
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.#ctor">
            <summary>
            Default constructor
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.#ctor(System.Int32)">
            <summary>
            Constructor
            </summary>
            <param name="capacity">list initial length</param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Constructor
            </summary>
            <param name="collection">preloaded list</param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.#ctor(Siemens.SimaticIT.DataModel.IEntity,System.String,System.Func{Siemens.SimaticIT.DataModel.ChangeTrackerContainer.CollectionPropertyChangeDetail})">
            <summary>
            Constructor
            </summary>
            <param name="originatingEntity">entity</param>
            <param name="propName">property name</param>
            <param name="collectionChanges">list of changes</param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.AddFunc">
            <summary>
            Add item delegate
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.AddIndexFunc">
            <summary>
            Add index delegate
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.RemoveFunc">
            <summary>
            Remove entity delegate
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.RemoveIndexFunc">
            <summary>
            Remove index delegate
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.UpdateIndexFunc">
            <summary>
            Update index delegate
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.ClearFunc">
            <summary>
            Clear items delegate
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.OnAdd(`0)">
            <summary>
            OnAdd callback
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.OnAddIndex(System.Int32,`0)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.OnRemove(`0)">
            <summary>
            
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.OnRemoveIndex(System.Int32)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.OnUpdateIndex(System.Int32,`0)">
            <summary>
            
            </summary>
            <param name="index"></param>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.OnClear">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.Count">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.Item(System.Int32)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="index"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.Add(`0)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.Clear">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.Remove(`0)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HookCollection`1.RemoveAt(System.Int32)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.LogHelper">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.LogHelper.BuildLogMessage(System.String,System.String,System.String)">
            <summary>
            
            </summary>
            <param name="className"></param>
            <param name="methodName"></param>
            <param name="messageContent"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.LogHelper.BuildLogMessage(System.String,System.String,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="className"></param>
            <param name="methodName"></param>
            <param name="messageContent"></param>
            <param name="args"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.LogHelper.ToStringHandlingNulls(System.Object)">
            <summary>
            
            </summary>
            <param name="input"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.MorphCollection`2">
            <summary>
            This collection is used to maintain updated to parallel collections
            The first one (of T) is the "main" and used on the concrete type
            The second one (of K) typically refers to the base interface of T
            The implementation resolve casting problems
            from List(of Concrete) to List(of Interface) and vice versa
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="K"></typeparam>
            <summary>
            public surface of this collection
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.MorphCollection`2.#ctor(Siemens.SimaticIT.DataModel.IEntity,System.String,System.Func{Siemens.SimaticIT.DataModel.ChangeTrackerContainer.CollectionPropertyChangeDetail})">
            <summary>
            Constructor for the MorphCollection class.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.MorphCollection`2.#ctor(Siemens.SimaticIT.DataModel.IEntity,System.String)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="originatingEntity"></param>
            <param name="propName"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.MorphCollection`2.#ctor">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.MorphCollection`2.#ctor(System.Int32)">
            <summary>
            Constructor for the MorphCollection class.
            </summary>
            <param name="capacity"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.MorphCollection`2.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
            Constructor for the MorphCollection class.
            </summary>
            <param name="collection"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.MorphCollection`2.GetListOfBase">
            <summary>
            return a List of the base type (typically the interface)
            </summary>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.MorphCollection`2.Init">
            <summary>
            Keep the two collections in sync
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.MorphCollection`2.Count">
            <summary>
            Number of the contained items.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.MorphCollection`2.Item(System.Int32)">
            <summary>
            Access to the element specified by index.
            </summary>
            <param name="index"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.MorphCollection`2.Add(`0)">
            <summary>
            Add an element to the collection.
            </summary>
            <param name="item"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.MorphCollection`2.Clear">
            <summary>
            Clear the collection.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.MorphCollection`2.Remove(`0)">
            <summary>
            Remove an item from he collection.
            </summary>
            <param name="item"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.MorphCollection`2.RemoveAt(System.Int32)">
            <summary>
            Remove an item from he collection.
            </summary>
            <param name="index"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.HierarchyRootsOnTopStack">
            <summary>
            Represents an hierarchy of entity types in respect to the parent-child
            relationships. Every item in the list is made up by a set of entity types
            which are self consistent and, when inserted on the database in this order,
            do not cause constraints violation. This evaluation does not, obviously,
            take into consideration the records; but only the types.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HierarchyRootsOnTopStack.#ctor(System.Action{System.String},System.Action{System.String},System.Action{System.String},System.Collections.Generic.IEnumerable{System.Type},System.Func{System.Type,System.Collections.Generic.IEnumerable{System.Type}})">
            <summary>
            
            </summary>
            <param name="log"></param>
            <param name="logWarning"></param>
            <param name="logError"></param>
            <param name="typesToManage"></param>
            <param name="getReferencedTypes"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.HierarchyRootsOnTopStack.Build">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.PropertyInfoExtensions">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.PropertyInfoExtensions.IsIndexer(System.Reflection.PropertyInfo)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="propertyInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.BackNavigationModel">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.BackNavigationModel.Name">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.BackNavigationModel.RelationCardinality">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.BackNavigationModel.ReferencedEntityType">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.BackNavigationModel.ReciprocalForwardProperty">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.CommonModel">
            <summary>
            Common ValueType and Entity model properties
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.CommonModel.PlainFields">
            <summary>
            List of Name/Type of the entity's props
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.CommonModel.DefaultValueProperties">
            <summary>
            Dictionary of property names and associated default values (if specified).
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.CommonModel.MandatoryProperties">
            <summary>
            List of mandatory properties (primary keys excluded).
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.CommonModel.MaxLengthProperties">
            <summary>
            Dictionary of property names and associated max length values (if specified).
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.CommonModel.InRangeProperties">
            <summary>
            List of properties whose values ​​must comply with a range.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ComplexTypeLogicalKeyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ComplexTypeLogicalKeyInfo.#ctor(System.String,System.Reflection.MethodInfo,System.Type,System.Type)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
            <param name="getMethod"></param>
            <param name="propertyType"></param>
            <param name="belongingEntityInterfaceType"></param>
            <exception cref="T:System.ArgumentNullException"></exception>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ComplexTypeLogicalKeyInfo.OrderedInnerProperties">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ComplexTypeLogicalKeyInfo.GetValue(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ComplexTypeReferencePropertyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ComplexTypeReferencePropertyInfo.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ComplexTypeReferencePropertyInfo.ReferencedEntityInterfaceType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ComplexTypeReferencePropertyInfo.ReferencedPropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ComplexTypeReferencePropertyInfo.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ComplexTypeReferencePropertyInfo.IsFileType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ComplexTypeReferencePropertyInfo.IsThirdPartyReference">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.EntityModel">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.EntityModel.PhysicalInfo">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.EntityModel.LogicalInfo">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.FkModel">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.FkModel.Name">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.FkModel.SiblingNavigationProperty">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalKeyPropertyInfoBase">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalKeyPropertyInfoBase.#ctor(System.String,System.Type,System.Type)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
            <param name="propertyType"></param>
            <param name="belongingEntityInterfaceType"></param>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalKeyPropertyInfoBase.PropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalKeyPropertyInfoBase.PropertyType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalKeyPropertyInfoBase.BelongingEntityInterfaceType">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel">
            <summary>
            Container of Entity model infos
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.LogicalName">
            <summary>
            Logical Name
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.FullLogicalName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.BaseInterfaceType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.Behaviors">
            <summary>
            List of behavior properties (name / interface)
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.BoundedContext">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.DerivedInterfaceTypes">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.FKsProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.NavigationProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.BackNavigationProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.ExcludedProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.ManyToManyProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.LogicalKeyProperties">
            <summary>
            Dictionary of property names marked as LogicalKey.
            The bool is true if these logical keys are also foreign keys.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.ImplicitLogicalKeyPropertiesOrderedByName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.ReadOnlyProperties">
            <summary>
            List of read only properties.
            These properties can be modified only by specific commands.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.SegmentedCompositionForeignKeyProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.CumulativeCompositionForeignKeyProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.CanBePartOfCompositionSegmented">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.CanBePartOfCompositionCumulative">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.ReferencedInCompositionBySegmented">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.ReferencedInCompositionByCumulative">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.PropertiesToClone">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.PropertiesToCut">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.ComplexTypeProperties">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.PropertiesToCloneInDbInitializer">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.RootEntityInterfaceType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.RootEntityClassType">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.IsRestricted">
            <summary>
            Is true when the entity (or the root entity) is restricted.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.LogicalModel.IsSealed">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ManyToManyModel">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ManyToManyModel.Name">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ManyToManyModel.Side">
            <summary>
            Identifies the side of the relation.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ManyToManyModel.ReferencedEntityType">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ManyToManyModel.ReciprocalManyToManyProperty">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model">
             <summary>
            
             </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.Initialized">
             <summary>
            
             </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.EntityInfo">
            <summary>
            Container of Entity informations
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.ReadingEntityInfo">
            <summary>
            Container of reading model Entity informations
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.EntityInfoByClass">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.StructureInfo">
            <summary>
            Container of Structure informations
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.ClassToInterface">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.InterfaceToClass">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.EntityInterfaceTypesHierarchyRootsOnTop">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.EntitySystemProperties">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetComplexTypePropertiesToCopy(Siemens.SimaticIT.DataModel.IStructure)">
            <summary>
            
            </summary>
            <param name="complexTypeInstance"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetEntityInterfaceType(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetInterfaceType(Siemens.SimaticIT.DataModel.IStructure)">
            <summary>
            
            </summary>
            <param name="complexType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.IsCompositeChild(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.ReferencesInCompositeSegmented(System.Type,System.Type)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="referencedType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.ReferencesInCompositeCumulative(System.Type,System.Type)">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="referencedType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.CanBePartOfCompositionSegmented(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.CanBePartOfCompositionSegmented(System.Type)">
            <summary>
            
            </summary>
            <param name="entityInterfaceType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.ReferencingInComposition(System.Type)">
            <summary>
            
            </summary>
            <param name="entityInterfaceType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.IsCompositeRoot(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetComplexTypeBusinessProperties(Siemens.SimaticIT.DataModel.IStructure)">
            <summary>
            
            </summary>
            <param name="complexTypeInstance"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetComplexTypeBusinessProperties(System.Type)">
            <summary>
            
            </summary>
            <param name="complexTypeClassType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetInterfaceType(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.IsForwardNavigationProperty(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="entityInterfaceType"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.IsForwardSingleNavigation(Siemens.SimaticIT.DataModel.IEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.IsForwardSingleNavigation(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="entityInterfaceType"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.IsBackwardSingleNavigation(Siemens.SimaticIT.DataModel.IEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.IsBackwardSingleNavigation(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="entityInterfaceType"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.IsManyToManyNavigation(Siemens.SimaticIT.DataModel.IEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.IsManyToManyNavigation(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="entityInterfaceType"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetReferencedEntityInterfaceType(Siemens.SimaticIT.DataModel.IEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetReferencedEntityInterfaceType(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="entityInterfaceType"></param>
            <param name="propertyName"></param>
            <returns></returns>
            <exception cref="T:System.Exception"></exception>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetLogicalKeyProperties(System.Type)">
            <summary>
            
            </summary>
            <param name="entityInterfaceType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetInterfaceType(System.Type)">
            <summary>
            
            </summary>
            <param name="entityInterfaceOrClassType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetPlainPropertyNames(System.Type)">
            <summary>
            
            </summary>
            <param name="entityInterfaceOrClassType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetPlainPropertyType(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="entityInterfaceOrClassType"></param>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetForeignKeyPropertyNames(System.Type)">
            <summary>
            
            </summary>
            <param name="entityInterfaceOrClassType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetForeignKeyPropertyNamesOfHierarchy(System.Type)">
            <summary>
            
            </summary>
            <param name="entityInterfaceOrClassType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetManyToManyForwardPropertyNames(System.Type)">
            <summary>
            
            </summary>
            <param name="entityInterfaceOrClassType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetManyToManyForwardAndBackwardPropertyNames(System.Type)">
            <summary>
            
            </summary>
            <param name="entityInterfaceOrClassType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.CreateStack(System.Type)">
            <summary>
            
            </summary>
            <param name="entityInterfaceOrClassType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetComplexTypePropertyNames(System.Type)">
            <summary>
            
            </summary>
            <param name="entityInterfaceOrClassType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.IsFacet(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.IsRevisionEntity(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.IsRevisionEntity(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.IsFacet(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.BuildPropertiesToCloneInDbInitializer">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.IsSameRootClassType(System.String,System.String)">
            <summary>
            Tells if the two types inherit from the same root entity type.
            </summary>
            <param name="type1Fullname">The fullname of one of the entity types.</param>
            <param name="type2Fullname">The fullname of the other entity type.</param>
            <returns>true if the specified type inherit from the same root entity type, false otherwise.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetRootInterfaceType(System.String)">
            <summary>
            
            </summary>
            <param name="entityInterfaceOrClassTypeFullname"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetOrderedTypes(System.Collections.Generic.IEnumerable{System.Type})">
            <summary>
            
            </summary>
            <param name="entitiesByType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.Model.GetOrderedTypes``1(System.Collections.Generic.Dictionary{System.Type,System.Collections.Generic.IEnumerable{``0}})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="entitiesByType"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.NavigationModel">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.NavigationModel.Name">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.NavigationModel.RelationCardinality">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.NavigationModel.ReferencedEntityType">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.NavigationModel.SiblingFkProperty">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.NavigationModel.ReciprocalBackwardProperty">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.PhysicalModel">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.PhysicalModel.InterfaceType">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.PhysicalModel.ClassType">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ComplexTypeModel">
            <summary>
            List of Name/Type of the entity's props
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ComplexTypeModel.Name">
            <summary>
            Property name
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ComplexTypeModel.ClrType">
            <summary>
            Property type
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.PlainFieldModel">
            <summary>
            List of Name/Type of the entity's props
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.PlainFieldModel.Name">
            <summary>
            Property name
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.PlainFieldModel.ClrType">
            <summary>
            Property type
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.PlainLogicalKeyPropertyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.PlainLogicalKeyPropertyInfo.#ctor(System.String,System.Reflection.MethodInfo,System.Type,System.Type)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
            <param name="getMethod"></param>
            <param name="propertyType"></param>
            <param name="belongingEntityInterfaceType"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.PlainLogicalKeyPropertyInfo.GetValue(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ReferenceLogicalKeyPropertyInfo">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ReferenceLogicalKeyPropertyInfo.#ctor(System.String,System.Reflection.MethodInfo,System.Reflection.MethodInfo,System.Type,System.Type)">
            <summary>
            
            </summary>
            <param name="propertyName"></param>
            <param name="getObjectMethod"></param>
            <param name="getIdMethod"></param>
            <param name="propertyType"></param>
            <param name="belongingEntityInterfaceType"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ReferenceLogicalKeyPropertyInfo.GetReferencedObject(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.ReferenceLogicalKeyPropertyInfo.GetReferencedId(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.RelationSide">
            <summary>
            Identifies the side within a relation.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Utilities.StickyModel.RelationSide.Forward">
            <summary>
            Referencing side.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Utilities.StickyModel.RelationSide.Backward">
            <summary>
            Referenced side.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.StickyModelException">
            <summary>
            StickyModelException
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.StickyModelException.#ctor(System.String)">
            <summary>
            The constructor.
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.StickyModel.StickyModelException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>
            Constructor
            </summary>
            <param name="info"></param>
            <param name="context"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.StructureModel">
            <summary>
            Container of Structure model infos
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.StructureModel.ReferencePropertiesInfo">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.InRangePropertyModel">
            <summary>
            Model of property decorated with [From ... To ...] tag.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.InRangePropertyModel.Name">
            <summary>
            Name of property.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.InRangePropertyModel.RangeMin">
            <summary>
            Lower limit of the range values.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Utilities.StickyModel.InRangePropertyModel.RangeMax">
            <summary>
            Upper limit of the range values.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.StickyModel.RelationCardinality">
            <summary>
            Types of relationship between entities
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Utilities.StickyModel.RelationCardinality.OneToOne">
            <summary>
            One to one relationship
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Utilities.StickyModel.RelationCardinality.OneToMany">
            <summary>
            One to many relationship
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Utilities.StickyModel.RelationCardinality.ManyToMany">
            <summary>
            Many to many relationship
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities">
            <summary>
            Provides utilities methods for the entity-model.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetClassOrInterfaceEntityType(System.String)">
            <summary>
            Get the entity-type having the specified name.
            </summary>
            <param name="typeFullName">The namespace-qualified name of the type.</param>
            <returns>The type having the specified name.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetEntityTypeName(System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetEntityTypeName(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetEntityTypeNameTokens(System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetEntityTypeNameTokens(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetEntitySimpleTypeTokens(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetEntitySimpleTypeTokens(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="typeName"></param>
            <param name="typeNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetEntityClassFullTokens(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetEntityClassFullName(System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetEntityClassFullTokens(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="typeName"></param>
            <param name="typeNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetEntityTypeTokens(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="typeName"></param>
            <param name="typeNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetBoundedContext(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            Get the bounded-context of an entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The bounded-context of the specified entity.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetBoundedContext(System.Type)">
            <summary>
            Get entity's bounded-context
            </summary>
            <param name="entityInterfaceType">Entity interface type</param>
            <returns>Entity's bounded-context</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetEntityInterfaceType(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            Get the interface-Type of an entity.
            </summary>
            <param name="entity">The entity.</param>
            <returns>The interface-Type of the specified entity.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetLogicalKeyPropertiesNames(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetLogicalKey(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.EntitiesUtilities.GetPropertyNameValueStringRepresentation(System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Utilities.TypeHelper">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.FindIEnumerable(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="seqType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.GetDefault(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.GetElementType(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="seqType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.GetMemberType(System.Reflection.MemberInfo)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="mi"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.GetNonNullableType(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.GetNullAssignableType(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.GetNullConstant(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.GetSequenceType(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="elementType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.IsInteger(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.IsNullableType(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.IsNullAssignable(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.IsReadOnly(System.Reflection.MemberInfo)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="member"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.GetGenericMethod(System.Type,System.String,System.Type[])">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <param name="name"></param>
            <param name="parameterTypes"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.ToStringEx(System.Type,System.Boolean)">
            <summary>
            [Raf] This method create a "nice" string for generic and non-generic types
            </summary>
            <param name="type">The type to show as a string</param>
            <param name="useFullName">when true use the FullName property, otherwise the Name property</param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Utilities.TypeHelper.IsSimpleType(System.Type)">
            <summary>
            This is not a general definition for Simple Type
            It is meant for navigating a domain graph where
            only reference types (but string) must be walked;
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.PrimitiveEntity">
            <summary>
            The most simple and primitive entity
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Settings">
            <summary>
            Settings class
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.Settings.FacetsPropertyName">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Settings.SystemInterfacesFullNames">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Settings.EntitiesSystemFields">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Settings.EngineeringLevelsHierarchyOrder">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Structure">
            <summary>
            Base structure class implementing the IEntity interface.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Structure.#ctor">
            <summary>
            Constructor of Structure class.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Structure.Clone">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.TrackedStructure">
            <summary>
            Base structure class implementing the IStructure interface.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.TrackedStructure.#ctor">
            <summary>
            Constructor of TrackedStructure class.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.TrackedStructure.ChangeTracker">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.StructureDescriptor`1">
            <summary>
            Defines a complex type descriptor.
            </summary>
            <typeparam name="TStructure"></typeparam>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.#ctor">
            <summary>
            Default constructor of the complex type descriptor.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.StructureDescriptor`1.TargetTypes">
            <summary>
            Exposes the target type of the configuration.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.StructureDescriptor`1.Configuration">
            <summary>
            Exposes an instance of the configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.Exclude``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Declare that the specified property is computed.
            </summary>
            <typeparam name="TProperty"></typeparam>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.Implements``1">
            <summary>
            Declare that current structure implements an interface
            </summary>
            <typeparam name="TInterface">The structure interface implemented by this structure.</typeparam>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.HasUniqueIdentifier(System.String)">
            <summary>
            Defines the structure unique identifier
            </summary>
            <param name="uid">The unique identifier</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.HasLogicalName(System.String)">
            <summary>
            Defines the logical name of the current structure.
            </summary>
            <param name="logicalName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTimeOffset}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTimeOffset}}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})">
            <summary>
            Provides access to the specified property configuration.
            </summary>
            <param name="propertyExpression">The expression identifying the property to be configured.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.TimeSpan}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.TimeSpan}}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.StructureDescriptor`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <typeparam name="TProperty"></typeparam>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.TrackedEntity">
            <summary>
            Base entity class implementing the IEntity interface.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.TrackedEntity.#ctor">
            <summary>
            Constructor of TrackedEntity class.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.TrackedEntity.SessionId">
            <summary>
            Identify the logical transaction session.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.TrackedEntity.ChangeTracker">
            <summary>
            Instance of ChangeTracker class.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.TrackedEntity.PushChanges(Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation)">
            <summary>
            
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.TrackedEntity.SetSegmentClosingOperation(Siemens.SimaticIT.DataModel.ChangeTrackerContainer.Operation)">
            <summary>
            
            </summary>
            <param name="operation"></param>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.TrackedEntity.ManageFkSet(Siemens.SimaticIT.DataModel.TrackedEntity,Siemens.SimaticIT.DataModel.Entity,System.Nullable{System.Guid}@,System.String,System.Nullable{System.Guid})">
            <summary>
            Propagates changes to referenced entities. 
            </summary>
            <param name="originating"></param>
            <param name="oldParent"></param>
            <param name="_parentId"></param>
            <param name="propName"></param>
            <param name="value"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.TrackedEntity.ManageIndividualNavigation(Siemens.SimaticIT.DataModel.IEntity,System.String,Siemens.SimaticIT.DataModel.Entity,Siemens.SimaticIT.DataModel.IEntity,System.Type)">
            <summary>
            Propagates entity changes to siblings.
            </summary>
            <param name="originating"></param>
            <param name="propName"></param>
            <param name="oldParent"></param>
            <param name="value"></param>
            <param name="interfaceType"></param>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.EntityDescriptor`1">
            <summary>
            Defines an entity descriptor.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.#ctor">
            <summary>
            Default constructor of the entity descriptor.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.EntityDescriptor`1.TargetTypes">
            <summary>
            Exposes the target type of the configuration.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Configuration">
            <summary>
            Exposes an instance of the configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Exclude``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Declares that the specified property is computed.
            </summary>
            <typeparam name="TProperty">The type of the property.</typeparam>
            <param name="propertyExpression">The expression identifying the property to be excluded.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Extends``1">
            <summary>
            Declares that current entity is an extension.
            </summary>
            <typeparam name="TEntityToExtend">The base entity type extended by this entity.</typeparam>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Implements``1">
            <summary>
            Declare that current entity implements an interface
            </summary>
            <typeparam name="TInterface">The entity interface implemented by this entity.</typeparam>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.IsSealed">
            <summary>
            Declares that current entity as sealed.
            </summary>
            <returns>The configuration instance</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.BelongsToDomain(System.String)">
            <summary>
            Defines the domain of the current entity
            </summary>
            <param name="domainName">The domain name</param>
            <returns>The configuration instance</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.HasUniqueIdentifier(System.String)">
            <summary>
            Defines the entity unique identifier
            </summary>
            <param name="uid">The unique identifier</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.HasPrimaryKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Defines the primary key of the current entity.
            </summary>
            <param name="propertyExpressions"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.HasLogicalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Defines the logical key of the current entity.
            </summary>
            <param name="propertyExpressions"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.HasLogicalName(System.String)">
            <summary>
            Defines the logical name of the current entity.
            </summary>
            <param name="logicalName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.HasTableName(System.String,System.String)">
            <summary>
            Defines the database table name assigned to the current entity.
            </summary>
            <param name="tableName">The physical table name</param>
            <param name="tableSchema">The physical table schema</param>
            <returns>The configuration instance</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.HasLogicalDiscriminator(System.String)">
            <summary>
            Defines the logical discriminator of the current entity.
            </summary>
            <param name="discriminator">The logical discriminator</param>
            <returns>The configuration instance</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.HasUnrestrictedAccess">
            <summary>
            Defines the current entity as unrestricted.
            </summary>
            <returns>The configuration instance</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTime}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTime}}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.DateTimeOffset}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.DateTimeOffset}}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Decimal}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.Decimal}}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.String}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Byte[]}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.TimeSpan}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Property(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{System.TimeSpan}}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.EntityDescriptor`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
            Access to the specified property configuration.
            </summary>
            <typeparam name="TProperty"></typeparam>
            <param name="propertyExpression"></param>
            <returns></returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.Descriptor">
            <summary>
            Identifies a descriptor class that can be used to configure data model elements.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Descriptor.TargetTypes">
            <summary>
            Get the entity types configureddescribed by this descriptor.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.Descriptor.ConfigurationFactory">
            <summary>
            Get/Set an instance of the configuration factory.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Descriptor.RunConfigure">
            <summary>
            Run the configuration method.
            </summary>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.Descriptor.Configure">
            <summary>
            Execute internal configuration.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.TrackedFacet">
            <summary>
            Base facet class implementing the IFacet interface.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.IStructure">
            <summary>
            Defines a complex type that can be used as a property of an entity.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.IFacet">
            <summary>
            Describes the minimum set of attributes that are mandatory in the definion of a generic facet.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.IndexBehavior">
            <summary>
            Index behaviors
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.IndexBehavior.None">
            <summary>
            None (Default)
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.IndexBehavior.Unique">
            <summary>
            Unique
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.IndexBehavior.Clustered">
            <summary>
            Clustered
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.IndexBehavior.UniqueClustered">
            <summary>
            Unique and Clustered
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.IndexDescriptor`1">
            <summary>
            Defines an index descriptor.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.IndexDescriptor`1.#ctor">
            <summary>
            Default constructor of the index descriptor.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IndexDescriptor`1.TargetTypes">
            <summary>
            Exposes the target type of the configuration.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IndexDescriptor`1.Configuration">
            <summary>
            Exposes an instance of the configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.IndexDescriptor`1.HasIndex(System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Configures an index
            </summary>
            <param name="propertyExpressions">The expression identifying the index properties.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.IndexDescriptor`1.HasIndex(Siemens.SimaticIT.DataModel.IndexBehavior,System.Linq.Expressions.Expression{System.Func{`0,System.Object}}[])">
            <summary>
            Configures an index
            </summary>
            <param name="behavior">The index behavior.</param>
            <param name="propertyExpressions">The expression identifying the index properties.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.DeleteAction">
            <summary>
            Available actions that can be performed in case of deletion.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.DeleteAction.NoAction">
            <summary>
            No action.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.DeleteAction.Cascade">
            <summary>
            Cascade deletion.
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.DeleteAction.SetNull">
            <summary>
            References will be set to null.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.RelationshipDescriptor`2">
            <summary>
            Defines an abstract relationship descriptor.
            </summary>
            <typeparam name="TEntityFrom"></typeparam>
            <typeparam name="TEntityTo"></typeparam>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.RelationshipDescriptor`2.#ctor">
            <summary>
            Default constructor of the entity descriptor.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.RelationshipDescriptor`2.TargetTypes">
            <summary>
            Exposes the target type of the configuration.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.RelationshipDescriptor`2.Configuration">
            <summary>
            Exposes an instance of the configuration.
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.RelationshipDescriptor`2.HasOneToOne``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}},System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Configures a "One to One" entity relationship.
            </summary>
            <param name="foreignKey">The expression identifying the foreign key property.</param>
            <param name="forwardNavigation">The expression identifying the forward navigation property.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.RelationshipDescriptor`2.HasOneToOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Configures the foreign key property for the current relationship.
            </summary>
            <param name="foreignKey">The expression identifying the foreign key property.</param>
            <param name="forwardNavigation">The expression identifying the forward navigation property.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.RelationshipDescriptor`2.HasManyToOne``1(System.Linq.Expressions.Expression{System.Func{`0,System.Nullable{``0}}},System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Configures a "Many to One" entity relationship.
            </summary>
            <param name="foreignKey">The expression identifying the foreign key property.</param>
            <param name="forwardNavigation">The expression identifying the navigation property.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.RelationshipDescriptor`2.HasManyToOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}},System.Linq.Expressions.Expression{System.Func{`0,`1}})">
            <summary>
            Configures a "Many to One" entity relationship.
            </summary>
            <param name="foreignKey">The expression identifying the foreign key property.</param>
            <param name="forwardNavigation">The expression identifying the navigation property.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="M:Siemens.SimaticIT.DataModel.RelationshipDescriptor`2.HasManyToMany(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.ICollection{`1}}},System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.ICollection{`0}}})">
            <summary>
            Configures a "Many to Many" entity relationship.
            </summary>
            <param name="forwardNavigation">The expression identifying the forward navigation property.</param>
            <param name="backNavigation">The expression identifying the back navigation property.</param>
            <returns>The configuration instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.TypeAndString">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.TypeAndString.Type">
            <summary>
            
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.TypeAndString.String">
            <summary>
            
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.EngineeringLevel">
            <summary>
            EngineeringLevel enum
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.EngineeringLevel.CoreFunctionalBlock">
            <summary>
            CoreFunctionalBlock
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.EngineeringLevel.LibraryFunctionalBlock">
            <summary>
            LibraryFunctionalBlock
            </summary>
        </member>
        <member name="F:Siemens.SimaticIT.DataModel.EngineeringLevel.ProjectFunctionalBlock">
            <summary>
            ProjectFunctionalBlock
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.DataModel.IEntity">
            <summary>
            Describes the minimum set of attributes that are required to define a generic entity.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IEntity.Id">
            <summary>
            Identifies the auto-generated and read-only primary key.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IEntity.AId">
            <summary>
            Identifies the natural key, to be set by the derived entity factory. 
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IEntity.IsFrozen">
            <summary>
            Tells whether the entity is frozen.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IEntity.ConcurrencyVersion">
            <summary>
            Identifies the raw data version, used for optimistic concurrency.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IEntity.IsDeleted">
            <summary>
            Identifies the logically deleted system field.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IEntity.CreatedOn">
            <summary>
            Specifies the time of creation of the entity.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IEntity.LastUpdatedOn">
            <summary>
            Specifies the time of the last update of the entity.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IEntity.EntityType">
            <summary>
            Specifies the type of the entity.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IEntity.OptimisticVersion">
            <summary>
            Identifies the optimistic version, used for optimistic concurrency.
            </summary>
        </member>
        <member name="P:Siemens.SimaticIT.DataModel.IEntity.ConcurrencyToken">
            <summary>
            Identifies the concurrency token, used for optimistic concurrency.
            </summary>
        </member>
        <member name="T:Siemens.SimaticIT.Information.Data.Mapping.IEntityFactory">
            <summary>
            The entity factory
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Data.Mapping.IEntityFactory.CreateInstance">
            <summary>
            Creates an instance of an entity.
            </summary>
            <returns>The entity instance.</returns>
        </member>
        <member name="T:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities">
            <summary>
            TODO - Add comment
            </summary>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.ShallowCopy(System.Object,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            
            </summary>
            <param name="source"></param>
            <param name="propertiesToCopyNames"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.AddToIListThroughInterface(Siemens.SimaticIT.DataModel.IEntity,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propertyName"></param>
            <param name="objectToAdd"></param>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.AddToFacets(Siemens.SimaticIT.DataModel.IEntity,Siemens.SimaticIT.DataModel.IFacet)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="facet"></param>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.AddToIList(Siemens.SimaticIT.DataModel.IEntity,System.String,System.Type,System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propertyName"></param>
            <param name="entityInterfaceType"></param>
            <param name="objectToAdd"></param>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.SetPropertiesOnInterface(Siemens.SimaticIT.DataModel.IEntity,System.Collections.Generic.Dictionary{System.String,System.Object})">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propertyValues"></param>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.SetPropertiesOnInterface(Siemens.SimaticIT.DataModel.IEntity,System.Collections.Generic.IEnumerable{Siemens.SimaticIT.DataModel.PropertyNameAndValue})">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propertyNamesAndValues"></param>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertyName(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Gets the name of the property specified.
            </summary>
            <param name="lambdaExpression">The lambda expression pointing to the property.</param>
            <returns>The name of the property specified.</returns>
            <example>
            GetPropertyName(x => x.MyProperty) returns "MyProperty".
            </example>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetTypeInLoadedSimaticAssemblies(System.String)">
            <summary>
            
            </summary>
            <param name="fullname"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetInnerPropertyType(Siemens.SimaticIT.DataModel.IEntity,System.String)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="entity"></param>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetInnerType(System.Type,System.String)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetInnerTypeFromAnyImplementInterface(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertiesNotInvolving(System.Collections.Generic.List{System.Reflection.MemberInfo},System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="members"></param>
            <param name="forbiddenType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.IsEntityCompatibleWithCommand(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="interfaceType"></param>
            <param name="commandNamespace"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertyType(Siemens.SimaticIT.DataModel.IEntity,System.String)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="entity"></param>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertyValue(Siemens.SimaticIT.DataModel.IEntity,System.String)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="entity"></param>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPublicPropertyValue(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="instance"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.SetPublicPropertyValueThroughInterface(Siemens.SimaticIT.DataModel.IStructure,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="instance"></param>
            <param name="propertyName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertyValueFromInterface(Siemens.SimaticIT.DataModel.IEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertyValue(Siemens.SimaticIT.DataModel.IEntity,System.String,System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="entity"></param>
            <param name="propName"></param>
            <param name="interfaceWorkingOn"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertyValueFromAnyImplementedInterface(Siemens.SimaticIT.DataModel.IEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetTypeMapByBaseType(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="baseType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetTypesByBaseType(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="baseType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.IsBasedOn(System.Type,System.Type)">
            <summary>
            Test whether the typeToTest derives/implements the baseType
            </summary>
            <param name="typeToTest"></param>
            <param name="baseType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.IsCollectionOf(System.Type,System.Type)">
            <summary>
            Given:
            - type ==> IList(of X)
            - collectedElementType ==> a type which may be X or a base type/interface of X
            it returns true
            </summary>
            <param name="type">The type to test which may represent the collection</param>
            <param name="collectedElementType">The base type of the collected element type</param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.IsCollectionOfEntities(System.Reflection.PropertyInfo)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="prop"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.IsCollectionOfEntitiesOrFacets(System.Reflection.PropertyInfo)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="prop"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.IsEntity(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.IsPrimitiveEntity(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.IsBaseEntity(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.IsEnumerable(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.IsListOfEntities(System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.PropertyBelongToFacet(System.Reflection.PropertyInfo)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="prop"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.SetProperty(Siemens.SimaticIT.DataModel.IEntity,System.String,System.Object)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="entity"></param>
            <param name="propName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.SetPropertyOnInterface(Siemens.SimaticIT.DataModel.IEntity,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.SetPropertyThorughInterface(Siemens.SimaticIT.DataModel.IEntity,System.String,System.Object)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propName"></param>
            <param name="value"></param>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.SetProperty(Siemens.SimaticIT.DataModel.IEntity,System.String,System.Object,System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="entity"></param>
            <param name="propName"></param>
            <param name="value"></param>
            <param name="interfaceWorkingOn"></param>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertyOfExtendedInterface(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="extendedInterface"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertiesNotInvolving(System.Reflection.PropertyInfo[],System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="props"></param>
            <param name="forbiddenType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertiesInvolving(System.Reflection.PropertyInfo[],System.Type)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="props"></param>
            <param name="forbiddenType"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetCollectedType(System.Type)">
            <summary>
            If type is a generic collection (or a type deriving from a generic collection)
            this function returns the collected type
            Example1: MaterialLotCollection ==> MaterialLot
            Example2: List of MaterialLot ==> MaterialLot
            Example3: string ==> null
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertyTargetType(System.Type,System.String)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="type"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetComplexTypes(Siemens.SimaticIT.DataModel.TrackedEntity)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertyValueThroughAnyImplementedInterface(Siemens.SimaticIT.DataModel.IEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertyFromAnyImplementedInterface(Siemens.SimaticIT.DataModel.IEntity,System.String)">
            <summary>
            TODO - Add comment
            </summary>
            <param name="entity"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.IsPropertyFoundInAnyImplementedInterface(Siemens.SimaticIT.DataModel.IEntity,System.String)">
            <summary>
            
            </summary>
            <param name="entity"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertyInfoFromAnyImplementedInterface(System.Type,System.String)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.AnyImplementedInterfaceHasFacetsProperty(System.Type)">
            <summary>
            
            </summary>
            <param name="type"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetPropertyInfoFromAnyImplementedInterface(System.Object,System.String)">
            <summary>
            
            </summary>
            <param name="instance"></param>
            <param name="propertyName"></param>
            <returns></returns>
        </member>
        <member name="M:Siemens.SimaticIT.Information.Utilities.Reflection.ReflectionUtilities.GetCollectionBackwardPropertyNames(Siemens.SimaticIT.DataModel.IEntity)">
            <summary>
            Note: this includes the facets
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
    </members>
</doc>
