<?xml version="1.0" encoding="utf-8"?>
<doc>
  <assembly>
    <name>SimaticIT.SDK.Diagnostics</name>
  </assembly>
  <members>
    <member name="T:Siemens.SimaticIT.SDK.Diagnostics.Common.Category">
      <summary>
            Specifies the severity of the error in the trace. The levels of severity can be used to filter traces.
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.Category.LogAlways">
      <summary>
            This level represents events or messages of highest severity or importance. This level cannot be filtered by the user.
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.Category.Critical">
      <summary>
            This level represent critical errors, which are serious errors that cause major failures. 
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.Category.Error">
      <summary>
            This level represents standard errors that cause issues. 
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.Category.Warning">
      <summary>
            This level represent warning events (for example, events that are published because a disk is nearly full).
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.Category.Informational">
      <summary>
            This level represents information or messages that are not errors. These events can help trace the progress or state of an application. 
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.Category.Verbose">
      <summary>
             This level represents lengthy events or messages. 
            </summary>
    </member>
    <member name="T:Siemens.SimaticIT.SDK.Diagnostics.Common.SitSubChannelKeywords">
      <summary>
            Specifies a key that identifies as trace part of a specific subchanel
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.SitSubChannelKeywords.None">
      <summary>
            The none
            </summary>
    </member>
    <member name="T:Siemens.SimaticIT.SDK.Diagnostics.Common.SitTracingOperation">
      <summary>
            Specifies that trace is related to a specific operation such as starting or stopping an handler or firing an event
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.SitTracingOperation.None">
      <summary>
            Trace not related to Operation
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.SitTracingOperation.ExecutionStart">
      <summary>
            Trace is related to a start operation. An 'Activity ID' will be generated in ETW if Framework 4.6 or higher is used
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.SitTracingOperation.ExecutionStop">
      <summary>
            Trace is related to a stop operation. An 'Activity ID' will be generated and 'Duration' calculated in ETW if Framework 4.6 or higher is used
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.SitTracingOperation.EventFire">
      <summary>
            Trace is relate to event firing
            </summary>
    </member>
    <member name="T:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel">
      <summary>
            Permits additional categorizing by importance/frequency of the errors in each <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.Category" />.
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel.VeryLow">
      <summary>
            Specifies an event or error which very rarely occurs, with very low frequency, or is very important. 
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel.Low">
      <summary>
            Specifies an event or error which occurs rarely, with low frequency, or is important. 
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel.Medium">
      <summary>
            Specifies an event or error which occurs regularly, with medium frequency, or is only of medium importance. 
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel.High">
      <summary>
            Specifies an event or error which often occurs, with high frequency, or is only of low importance.
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel.VeryHigh">
      <summary>
            Specifies an event or error which very often occurs, with very high frequency, or is only of very low importance.
            </summary>
    </member>
    <member name="T:Siemens.SimaticIT.SDK.Diagnostics.Tracing.ITracer">
      <summary>
            Provides a public interface to write tracing information.
            </summary>
    </member>
    <member name="M:Siemens.SimaticIT.SDK.Diagnostics.Tracing.ITracer.Write(System.String,System.String)">
      <summary>
            Specifies the channel and message for the trace.
            </summary>
      <param name="channel">The channel of the trace.</param>
      <param name="message">The message of the trace.</param>
      <returns>Returns <c>true</c> if a SIMATIC IT channel (provider) exists with the specified name, if not <c>false</c>.</returns>
      <remarks>
            The Category and Verbosity are set to (<see cref="F:Siemens.SimaticIT.SDK.Diagnostics.Common.Category.Informational" />, <see cref="F:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel.Medium" />) by default.
            </remarks>
      <example>
            the following method demonstrates the use of Write method to trace a simple message for an ETW provider.
            <code language="cs" title="C#">
using System;
using Siemens.SimaticIT.Unified;
using Siemens.SimaticIT.Unified.Common;
using Siemens.SimaticIT.Unified.Lean;
using Siemens.SimaticIT.SDK.Diagnostics.Tracing;
using Siemens.SimaticIT.SDK.Diagnostics.Common;

public static class SimpleMessageExample
{
    public static void Example()
    {
        // Here follows an example of a simple message.

        //sdkInstance is a well initialized instance of IUnifiedSDKLean or IUnifiedSDK
        sdkInstance.Tracer.Write("Siemens-SimaticIT-Trace-Handler", "message that describe the trace event");
    }
}
</code>
            The following method demonstrates the use of return value of Write method to verify that the ETW provider name is correct.
            <code language="cs" title="C#">using System;
using Siemens.SimaticIT.Unified;
using Siemens.SimaticIT.Unified.Common;
using Siemens.SimaticIT.Unified.Lean;
using Siemens.SimaticIT.SDK.Diagnostics.Tracing;
using Siemens.SimaticIT.SDK.Diagnostics.Common;

public static class WrongProviderExample
{
    public static void Example()
    {
        // Here follows an example of a message sento to the wrong provider.

        //sdkInstance is a well initialized instance of IUnifiedSDKLean or IUnifiedSDK
        bool exist = sdkInstance.Tracer.Write(
            "Siemens-SimaticIT-TraceEx-WrongproviderName",
            "message that describe the trace event");

        // Gives an error because of the wrong provider name
        Debug.Assert(exist);
    }
}
</code></example>
    </member>
    <member name="M:Siemens.SimaticIT.SDK.Diagnostics.Tracing.ITracer.Write(System.String,Siemens.SimaticIT.SDK.Diagnostics.Common.Category,System.String)">
      <summary>
            Specifies the channel, message and category of the trace.
            </summary>
      <param name="channel">The channel of the trace.</param>
      <param name="category">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.Category" /> of the trace.</param>
      <param name="message">The message of the trace.</param>
      <returns>Returns <c>true</c> if a SIMATIC IT channel (provider) exists with the specified name, if not <c>false</c>.</returns>
      <remarks>
            The Verbosity is set to <see cref="F:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel.Medium" /> by default.
            </remarks>
    </member>
    <member name="M:Siemens.SimaticIT.SDK.Diagnostics.Tracing.ITracer.Write(System.String,Siemens.SimaticIT.SDK.Diagnostics.Common.Category,System.String,System.Object[])">
      <summary>
            Writes a trace with the channel and category, it also expands the objects in an array of values as a composite string format.
            </summary>
      <param name="channel">The channel of the trace.</param>
      <param name="category">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.Category" /> of the trace.</param>
      <param name="format">A composite format string of the trace.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
      <returns>Returns <c>true</c> if a SIMATIC IT channel (provider) exists with the specified name, if not <c>false</c>.</returns>
      <remarks>
            The Verbosity is set to <see cref="F:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel.Medium" /> by default.
            </remarks>
      <example>
            the following method demonstrates the use of Write method to trace a message with a specified category and arguments.
            <code language="cs" title="C#">using System;
using Siemens.SimaticIT.Unified;
using Siemens.SimaticIT.Unified.Common;
using Siemens.SimaticIT.Unified.Lean;
using Siemens.SimaticIT.SDK.Diagnostics.Tracing;
using Siemens.SimaticIT.SDK.Diagnostics.Common;

public static class MessageWithArgumentsExample
{
    public static void Example()
    {
        // Here follows various example messages with different types of parameters.

        //sdkInstance is a well initialized instance of IUnifiedSDKLean or IUnifiedSDK
        ITracer tracer = sdkInstance.Tracer;
        int level = 100;
        var high = 50;
        var highigh = 90;
        if (level &lt; high)
        {
            // Traces an Information message with one argument.
            tracer.Write("Siemens-SimaticIT-Trace-Handler", Category.Informational, "Level {0} is normal range", level);
        }
        else if (level &lt; highigh)
        {
            // Traces a warning message with two arguments.
            tracer.Write("Siemens-SimaticIT-Trace-Handler", Category.Warning,
                "Attention!!! Level {0} is higher than {1}", level, high);
        }
        else
        {
            // Traces an error message with two arguments.
            tracer.Write("Siemens-SimaticIT-Trace-Handler", Category.Error,
                "Allarm!!! Level {0} is higher than dangerous value: {1}", level, highigh);
        }
    }
}
</code></example>
    </member>
    <member name="M:Siemens.SimaticIT.SDK.Diagnostics.Tracing.ITracer.Write(System.String,Siemens.SimaticIT.SDK.Diagnostics.Common.Category,Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel,System.String)">
      <summary>
            Specifies the channel, category, message and the verbosity level of the trace.
            </summary>
      <param name="channel">The channel of the trace.</param>
      <param name="category">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.Category" /> of the trace.</param>
      <param name="verbosity">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel" /> of the trace.</param>
      <param name="message">The message of the trace.</param>
      <returns>Returns <c>true</c> if a SIMATIC IT channel (provider) exists with the specified name, if not <c>false</c>.</returns>
      <example>
            the following method demonstrates the use of Write method to trace a message with a specified category and verbosity.
            <code language="cs" title="C#">using System;
using Siemens.SimaticIT.Unified;
using Siemens.SimaticIT.Unified.Common;
using Siemens.SimaticIT.Unified.Lean;
using Siemens.SimaticIT.SDK.Diagnostics.Tracing;
using Siemens.SimaticIT.SDK.Diagnostics.Common;

public static class MessageWithVerbosityExample
{
    public static void Example()
    {
        // Here follow examples of messagges with lots of details.

        //sdkInstance is a well initialized instance of IUnifiedSDKLean or IUnifiedSDK
        ITracer tracer = sdkInstance.Tracer;
        int level = 100;
        var high = 50;
        if (level &gt; high)
        {
            // Traces an Information message with Low Verbosity.
            tracer.Write("Siemens-SimaticIT-Trace-Handler", Category.Informational, VerbosityLevel.Low, "Level is over high threshold level");
            // Traces an Information message with more details.
            tracer.Write("Siemens-SimaticIT-Trace-Handler", Category.Informational, VerbosityLevel.Medium, "With the actual level of water the maximum quantity possible for tank will be reached in few minutes");
            // Traces an Information message with several details.
            var fullmessage = @"It's recommended to follow the correct procedure:
                                1) Stop pump pushing water in the tank
                                2) Open drain valve
                                Wait for level decrease enough";
            tracer.Write("Siemens-SimaticIT-Trace-Handler", Category.Informational, VerbosityLevel.High, fullmessage);
        }
    }
}
</code></example>
    </member>
    <member name="M:Siemens.SimaticIT.SDK.Diagnostics.Tracing.ITracer.Write(System.String,Siemens.SimaticIT.SDK.Diagnostics.Common.Category,Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel,System.String,System.Object[])">
      <summary>
            Specifies the channel, category, message and the verbosity level of the trace, it also writes an array of strings that are formatted as composite strings.
            </summary>
      <param name="channel">The channel of the trace.</param>
      <param name="category">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.Category" /> of the trace.</param>
      <param name="verbosity">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel" /> of the trace.</param>
      <param name="format">A composite format string of the trace.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
      <returns>Returns <c>true</c> if a SIMATIC IT channel (provider) exists with the specified name, if not <c>false</c>.</returns>
    </member>
    <member name="M:Siemens.SimaticIT.SDK.Diagnostics.Tracing.ITracer.IsEnabled(System.String,Siemens.SimaticIT.SDK.Diagnostics.Common.Category,Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel)">
      <summary>
            Determines whether someone is listenig on the channel.
            </summary>
      <param name="channel">The channel of the trace.</param>
      <param name="category">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.Category" /> of the trace.</param>
      <param name="verbosity">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel" /> of the trace.</param>
      <returns>
            Returns <c>true</c> if a SIMATIC IT channel (provider) exists and an ETW session listening on the channel with the specified Category and Verbosity exist; otherwise, <c>false</c>.
            </returns>
    </member>
    <member name="T:Siemens.SimaticIT.SDK.Diagnostics.Tracing.ITracerKeywords">
      <summary>
            Extension of ITracer interface supporting keyword identifing sub channel
            </summary>
    </member>
    <member name="M:Siemens.SimaticIT.SDK.Diagnostics.Tracing.ITracerKeywords.Write(System.String,Siemens.SimaticIT.SDK.Diagnostics.Common.Category,Siemens.SimaticIT.SDK.Diagnostics.Common.SitSubChannelKeywords,System.String)">
      <summary>
            Specifies the channel, message and category of the trace.
            </summary>
      <param name="channel">The channel of the trace.</param>
      <param name="category">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.Category" /> of the trace.</param>
      <param name="keywords">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.SitSubChannelKeywords" /> of the trace. Even if <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.SitSubChannelKeywords" /> is a Flag enum the current implementation requires the use of only one value at time.</param>
      <param name="message">The message of the trace.</param>
      <returns>
            Returns <c>true</c> if a SIMATIC IT channel (provider) exists with the specified name, if not <c>false</c>.
            </returns>
      <remarks>
            The Verbosity is set to <see cref="F:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel.Medium" /> by default.
            </remarks>
    </member>
    <member name="M:Siemens.SimaticIT.SDK.Diagnostics.Tracing.ITracerKeywords.Write(System.String,Siemens.SimaticIT.SDK.Diagnostics.Common.Category,Siemens.SimaticIT.SDK.Diagnostics.Common.SitSubChannelKeywords,System.String,System.Object[])">
      <summary>
            Writes a trace with the channel and category, it also expands the objects in an array of values as a composite string format.
            </summary>
      <param name="channel">The channel of the trace.</param>
      <param name="category">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.Category" /> of the trace.</param>
      <param name="keywords">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.SitSubChannelKeywords" /> of the trace. Even if <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.SitSubChannelKeywords" /> is a Flag enum the current implementation requires the use of only one value at time.</param>
      <param name="format">A composite format string of the trace.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
      <returns>
            Returns <c>true</c> if a SIMATIC IT channel (provider) exists with the specified name, if not <c>false</c>.
            </returns>
      <remarks>
            The Verbosity is set to <see cref="F:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel.Medium" /> by default.
            </remarks>
      <example>
            the following method demonstrates the use of Write method to trace a message with a specified category and arguments.
            <code language="cs" title="C#">using System;
using Siemens.SimaticIT.Unified;
using Siemens.SimaticIT.Unified.Common;
using Siemens.SimaticIT.Unified.Lean;
using Siemens.SimaticIT.SDK.Diagnostics.Tracing;
using Siemens.SimaticIT.SDK.Diagnostics.Common;

public static class MessageWithArgumentsExample
{
    public static void Example()
    {
        // Here follows various example messages with different types of parameters.

        //sdkInstance is a well initialized instance of IUnifiedSDKLean or IUnifiedSDK
        ITracer tracer = sdkInstance.Tracer;
        int level = 100;
        var high = 50;
        var highigh = 90;
        if (level &lt; high)
        {
            // Traces an Information message with one argument.
            tracer.Write("Siemens-SimaticIT-Trace-Handler", Category.Informational, "Level {0} is normal range", level);
        }
        else if (level &lt; highigh)
        {
            // Traces a warning message with two arguments.
            tracer.Write("Siemens-SimaticIT-Trace-Handler", Category.Warning,
                "Attention!!! Level {0} is higher than {1}", level, high);
        }
        else
        {
            // Traces an error message with two arguments.
            tracer.Write("Siemens-SimaticIT-Trace-Handler", Category.Error,
                "Allarm!!! Level {0} is higher than dangerous value: {1}", level, highigh);
        }
    }
}
</code></example>
    </member>
    <member name="T:Siemens.SimaticIT.SDK.Diagnostics.Tracing.ITracerOperation">
      <summary>
            Provides a public interface to write tracing information and Operation Info
            </summary>
    </member>
    <member name="M:Siemens.SimaticIT.SDK.Diagnostics.Tracing.ITracerOperation.Write(System.String,Siemens.SimaticIT.SDK.Diagnostics.Common.Category,Siemens.SimaticIT.SDK.Diagnostics.Common.SitTracingOperation,System.String)">
      <summary>
            Specifies the channel, message and category of the trace.
            </summary>
      <param name="channel">The channel of the trace.</param>
      <param name="category">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.Category" /> of the trace.</param>
      <param name="operation">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.SitTracingOperation" /> of the trace.</param>
      <param name="message">The message of the trace.</param>
      <returns>Returns <c>true</c> if a SIMATIC IT channel (provider) exists with the specified name, if not <c>false</c>.</returns>
      <remarks>
            The Verbosity is set to <see cref="F:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel.Medium" /> by default.
            </remarks>
    </member>
    <member name="M:Siemens.SimaticIT.SDK.Diagnostics.Tracing.ITracerOperation.Write(System.String,Siemens.SimaticIT.SDK.Diagnostics.Common.Category,Siemens.SimaticIT.SDK.Diagnostics.Common.SitTracingOperation,System.String,System.Object[])">
      <summary>
            Writes a trace with the channel and category, it also expands the objects in an array of values as a composite string format.
            </summary>
      <param name="channel">The channel of the trace.</param>
      <param name="category">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.Category" /> of the trace.</param>
      <param name="operation">The <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Common.SitTracingOperation" /> of the trace.</param>
      <param name="format">A composite format string of the trace.</param>
      <param name="args">An object array that contains zero or more objects to format.</param>
      <returns>Returns <c>true</c> if a SIMATIC IT channel (provider) exists with the specified name, if not <c>false</c>.</returns>
      <remarks>
            The Verbosity is set to <see cref="F:Siemens.SimaticIT.SDK.Diagnostics.Common.VerbosityLevel.Medium" /> by default.
            </remarks>
      <example>
            the following method demonstrates the use of Write method to trace a message with a specified category and arguments.
            <code language="cs" title="C#">using System;
using Siemens.SimaticIT.Unified;
using Siemens.SimaticIT.Unified.Common;
using Siemens.SimaticIT.Unified.Lean;
using Siemens.SimaticIT.SDK.Diagnostics.Tracing;
using Siemens.SimaticIT.SDK.Diagnostics.Common;

public static class MessageWithArgumentsExample
{
    public static void Example()
    {
        // Here follows various example messages with different types of parameters.

        //sdkInstance is a well initialized instance of IUnifiedSDKLean or IUnifiedSDK
        ITracer tracer = sdkInstance.Tracer;
        int level = 100;
        var high = 50;
        var highigh = 90;
        if (level &lt; high)
        {
            // Traces an Information message with one argument.
            tracer.Write("Siemens-SimaticIT-Trace-Handler", Category.Informational, "Level {0} is normal range", level);
        }
        else if (level &lt; highigh)
        {
            // Traces a warning message with two arguments.
            tracer.Write("Siemens-SimaticIT-Trace-Handler", Category.Warning,
                "Attention!!! Level {0} is higher than {1}", level, high);
        }
        else
        {
            // Traces an error message with two arguments.
            tracer.Write("Siemens-SimaticIT-Trace-Handler", Category.Error,
                "Allarm!!! Level {0} is higher than dangerous value: {1}", level, highigh);
        }
    }
}
</code></example>
    </member>
    <member name="T:Siemens.SimaticIT.SDK.Diagnostics.Tracing.TraceDisplayAttribute">
      <summary>
            decorate interface property that are used in ETW context to correctly display information about them
            </summary>
      <seealso cref="T:System.Attribute" />
    </member>
    <member name="M:Siemens.SimaticIT.SDK.Diagnostics.Tracing.TraceDisplayAttribute.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Tracing.TraceDisplayAttribute" /> class.
            </summary>
    </member>
    <member name="P:Siemens.SimaticIT.SDK.Diagnostics.Tracing.TraceDisplayAttribute.Name">
      <summary>
            Gets or sets the name.
            </summary>
    </member>
    <member name="P:Siemens.SimaticIT.SDK.Diagnostics.Tracing.TraceDisplayAttribute.Description">
      <summary>
            Gets or sets the description.
            </summary>
      <value>
            The description.
            </value>
    </member>
    <member name="T:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventAttribute">
      <summary>
            Identifies a method as an event, specifying  its characteristics.
            </summary>
    </member>
    <member name="M:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventAttribute.#ctor(System.Int32)">
      <summary>
            Initializa a instance of <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventAttribute" /> class with values.
            </summary>
      <param name="id">The event Id.</param>
    </member>
    <member name="P:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventAttribute.Id">
      <summary>
            The event ID.
            </summary>
    </member>
    <member name="P:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventAttribute.Keywords">
      <summary>
            The keywords associated with the event.
            </summary>
      <remarks>
            Custom keywords can be used, but for a correct class generation, their type should be included in the logger description.
            </remarks>
    </member>
    <member name="P:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventAttribute.Level">
      <summary>
            The category associated with the event.
            </summary>
      <remarks>Custom categories can be used, but for a correct class generation, their type should be included in the logger description.</remarks>
    </member>
    <member name="P:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventAttribute.Task">
      <summary>
            The task associated with the event.
            </summary>
      <remarks>Custom tasks can be used, but for a correct class generation, their type should be included in the logger description.</remarks>
    </member>
    <member name="P:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventAttribute.Message">
      <summary>
            The message associated with the event.
            </summary>
    </member>
    <member name="T:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventSourceAttribute">
      <summary>
            Specifies if an interface should be treated as log interface.
            </summary>
    </member>
    <member name="M:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventSourceAttribute.#ctor">
      <summary>
            Initializa a instance of <see cref="T:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventSourceAttribute" /> class with default values.
            </summary>
    </member>
    <member name="P:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventSourceAttribute.Name">
      <summary>
            Gets or sets the name of the channel.
            </summary>
      <value>
            The name of the channel.
            </value>
    </member>
    <member name="P:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventSourceAttribute.Category">
      <summary>
            Gets or sets the custom type for the category.
            </summary>
      <value>
            The custom type for the category. The defaul value is <see cref="P:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventSourceAttribute.Category" />.
            </value>
    </member>
    <member name="P:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogEventSourceAttribute.LogKeywords">
      <summary>
            Gets or sets the custom type for the keywords.
            </summary>
      <value>
            The custom type for the keywords. The defaul value is <c>null</c>.
            </value>
    </member>
    <member name="T:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogKeywords">
      <summary>
            Specifies an filtering option during the enabling operation. 
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogKeywords.All">
      <summary>
            All event will be enabled, independently from the specified keyword(s).
            </summary>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogKeywords.None">
      <summary>
            No event will be enabled.
            </summary>
    </member>
    <member name="T:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogTask">
      <summary>
            Specifies an filtering option during the enabling operation. Ideally, a task represents a group of actions with a certain affinity.
            </summary>
      <remarks>
            Custom values must be in the range from <c>1</c> through <c>65534</c>.
            </remarks>
    </member>
    <member name="F:Siemens.SimaticIT.SDK.Diagnostics.Logging.LogTask.None">
      <summary>
            None.
            </summary>
    </member>
    <member name="T:Siemens.SimaticIT.Diagnostics.ITraceContext">
      <summary>
            Interface representing context information to be inserted in Traces
            </summary>
    </member>
    <member name="P:Siemens.SimaticIT.Diagnostics.ITraceContext.From">
      <summary>
            Gets or set the name of application who generates the message
            </summary>
    </member>
    <member name="P:Siemens.SimaticIT.Diagnostics.ITraceContext.Origin">
      <summary>
            Gets or set the first message originator.
            </summary>
    </member>
    <member name="P:Siemens.SimaticIT.Diagnostics.ITraceContext.User">
      <summary>
            Gets or set the User Name
            </summary>
    </member>
    <member name="P:Siemens.SimaticIT.Diagnostics.ITraceContext.CorrelationId">
      <summary>
            Gets or set the Guid representing the context root
            </summary>
    </member>
    <member name="P:Siemens.SimaticIT.Diagnostics.ITraceContext.CurrentId">
      <summary>
            The identifier of the elaborated item. 
            </summary>
      <remarks>
            It can be the request, the response or the event id
            </remarks>
    </member>
    <member name="P:Siemens.SimaticIT.Diagnostics.ITraceContext.Retry">
      <summary>
            The message identifier
            </summary>
    </member>
    <member name="P:Siemens.SimaticIT.Diagnostics.ITraceContext.ContextName">
      <summary>
            Gets or set the Command, Event or Lean Context Name
            </summary>
    </member>
    <member name="P:Siemens.SimaticIT.Diagnostics.ITraceContext.ParentId">
      <summary>
            Gets or sets the parent identifier
            </summary>
      <remarks>
            It can be empty in case if an entity without parent.
            </remarks>
    </member>
    <member name="P:Siemens.SimaticIT.Diagnostics.ITraceContext.RootRequestId">
      <summary>
            Gets or sets the root request identifier
            </summary>
    </member>
    <member name="M:Siemens.SimaticIT.Diagnostics.ITraceContext.ToString">
      <summary>
            Formatting context information to string
            </summary>
    </member>
  </members>
</doc>